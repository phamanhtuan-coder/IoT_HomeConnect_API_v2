[
  {
    "name": "Door Management",
    "item": [
      {
        "name": "Toggle Door",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Door toggled successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.device).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"power_status\": true,\n  \"force\": false,\n  \"timeout\": 30000\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/doors/{{doorSerial}}/toggle",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "{{doorSerial}}", "toggle"]
          }
        },
        "response": []
      },
      {
        "name": "Get Door Status",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Door status retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.device).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/doors/{{doorSerial}}",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "{{doorSerial}}"]
          }
        },
        "response": []
      },
      {
        "name": "Configure Door (All Types)",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Door configured successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"open_angle\": 90,\n  \"close_angle\": 0,\n  \"open_rounds\": 3,\n  \"closed_rounds\": 0,\n  \"pir_enabled\": true\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/doors/{{doorSerial}}/configure",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "{{doorSerial}}", "configure"]
          }
        },
        "response": []
      },
      {
        "name": "Toggle PIR (Sliding Doors)",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('PIR toggled successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/doors/{{doorSerial}}/pir/toggle",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "{{doorSerial}}", "pir", "toggle"]
          }
        },
        "response": []
      },
      {
        "name": "Calibrate Door",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Door calibration started successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"openAngle\": 90,\n  \"closeAngle\": 0,\n  \"openRounds\": 3,\n  \"save_to_eeprom\": true\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/doors/{{doorSerial}}/calibrate",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "{{doorSerial}}", "calibrate"]
          }
        },
        "response": []
      },
      {
        "name": "Update Door Config",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Door config updated successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "PUT",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"config\": {\n    \"servo_open_angle\": 90,\n    \"servo_close_angle\": 0,\n    \"movement_duration\": 1000,\n    \"auto_close_delay\": 30000,\n    \"obstacle_detection\": true,\n    \"manual_override_enabled\": true,\n    \"emergency_mode\": false,\n    \"max_retry_attempts\": 3\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/doors/{{doorSerial}}/config",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "{{doorSerial}}", "config"]
          }
        },
        "response": []
      },
      {
        "name": "Send Door Command",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Door command sent successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"action\": \"open_door\",\n  \"state\": {\n    \"power_status\": true,\n    \"target_angle\": 90,\n    \"speed\": 50\n  },\n  \"priority\": \"normal\",\n  \"timeout\": 30000,\n  \"force\": false,\n  \"timestamp\": \"2025-07-10T12:00:00.000Z\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/doors/{{doorSerial}}/command",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "{{doorSerial}}", "command"]
          }
        },
        "response": []
      },
      {
        "name": "Test Door",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Door test started successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"test_type\": \"movement\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/doors/{{doorSerial}}/test",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "{{doorSerial}}", "test"]
          }
        },
        "response": []
      },
      {
        "name": "Emergency Door Operation",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Emergency operation executed successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.affected_doors).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"trigger_source\": \"fire_alarm\",\n  \"affected_doors\": [\"{{doorSerial}}\", \"DOOR_XYZ789\"],\n  \"action\": \"open_all\",\n  \"override_manual\": true,\n  \"emergency_type\": \"fire\",\n  \"timestamp\": \"2025-07-10T12:00:00.000Z\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/doors/emergency",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "emergency"]
          }
        },
        "response": []
      },
      {
        "name": "Get User Doors",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('User doors retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.doors).to.be.an('array');",
                "  pm.expect(response.total).to.be.a('number');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/doors?state=closed&is_moving=false&page=1&limit=10",
            "host": ["{{baseUrl}}"],
            "path": ["doors"],
            "query": [
              {
                "key": "state",
                "value": "closed"
              },
              {
                "key": "is_moving",
                "value": "false"
              },
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": []
      }
    ]
  }
]
