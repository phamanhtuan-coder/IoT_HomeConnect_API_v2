                  {
                    "key": "is_moving",
                    "value": "false"
                  },
                  {
                    "key": "page",
                    "value": "1"
                  },
                  {
                    "key": "limit",
                    "value": "10"
                  }
                ]
              }
            },
            "response": []
          },
          {
            "name": "Get Servo Doors",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Servo doors retrieved successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "  pm.expect(response.doors).to.be.an('array');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors/servo",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "servo"]
              }
            },
            "response": []
          },
          {
            "name": "Get Rolling Doors",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Rolling doors retrieved successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "  pm.expect(response.doors).to.be.an('array');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors/rolling",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "rolling"]
              }
            },
            "response": []
          },
          {
            "name": "Get Sliding Doors",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Sliding doors retrieved successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "  pm.expect(response.doors).to.be.an('array');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors/sliding",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "sliding"]
              }
            },
            "response": []
          },
          {
            "name": "Get Hub-Managed Doors",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Hub-managed doors retrieved successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "  pm.expect(response.doors).to.be.an('array');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors/hub-managed",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "hub-managed"]
              }
            },
            "response": []
          },
          {
            "name": "Get Direct Connected Doors",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Direct connected doors retrieved successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "  pm.expect(response.doors).to.be.an('array');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors/direct",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "direct"]
              }
            },
            "response": []
          }
        ]
      },
      {
        "name": "Statistics & Monitoring",
        "item": [
          {
            "name": "Get Door Type Statistics",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Door type statistics retrieved successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "  pm.expect(response.door_type_statistics).to.exist;",
                    "  pm.expect(response.total_doors).to.be.a('number');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors/stats/types",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "stats", "types"]
              }
            },
            "response": []
          }
        ]
[
  {
    "name": "Door Management - Enhanced",
    "item": [
                "raw": "{\n  \"door_type\": \"SLIDING\",\n  \"openDuration\": 2000,\n  \"save_to_eeprom\": true\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/calibrate/sliding",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "calibrate", "sliding"]
              }
            },
            "response": []
          }
        ]
      },
      {
        "name": "Special Operations",
        "item": [
          {
            "name": "Toggle PIR (Sliding Doors Only)",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('PIR toggled successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/pir/toggle",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "pir", "toggle"]
              }
            },
            "response": []
          },
          {
            "name": "Test Door",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Door test started successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"test_type\": \"movement\",\n  \"repeat_count\": 2\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/test",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "test"]
              }
            },
            "response": []
          },
          {
            "name": "Maintenance",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Maintenance started successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"maintenance_type\": \"calibrate\",\n  \"backup_config\": true,\n  \"notify_completion\": true\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/maintenance",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "maintenance"]
              }
            },
            "response": []
          }
        ]
      {
        "name": "Basic Operations",
        "name": "Bulk & Emergency Operations",
        "item": [
          {
            "name": "Emergency Door Operation",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Emergency operation executed successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "  pm.expect(response.affected_doors).to.be.an('array');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_serial_numbers\": [\"{{doorSerial}}\", \"DOOR_XYZ789\"],\n  \"action\": \"open\",\n  \"override_manual\": true\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/emergency",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "emergency"]
              }
            },
            "response": []
          },
          {
            "name": "Bulk Door Operation",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Bulk operation executed successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.results).to.be.an('array');",
                    "  pm.expect(response.total_processed).to.be.a('number');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_serial_numbers\": [\"{{doorSerial}}\", \"DOOR_XYZ789\"],\n  \"action\": \"toggle_door\",\n  \"state\": {\n    \"power_status\": true\n  },\n  \"priority\": \"normal\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/bulk",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "bulk"]
              }
            },
            "response": []
          },
          {
            "name": "Batch Configure",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Batch configuration executed successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.results).to.be.an('array');",
                    "  pm.expect(response.total_processed).to.be.a('number');",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_serials\": [\"{{doorSerial}}\", \"DOOR_XYZ789\"],\n  \"config\": {\n    \"door_type\": \"SERVO\",\n    \"open_angle\": 90,\n    \"close_angle\": 0,\n    \"movement_speed\": 5\n  },\n  \"apply_to_type\": \"SERVO\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/batch/configure",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "batch", "configure"]
              }
            },
            "response": []
          }
        ]
              }
            },
        "name": "Door Listing & Filtering",
        "item": [
          {
            "name": "Get All User Doors",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('User doors retrieved successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "  pm.expect(response.doors).to.be.an('array');",
                    "  pm.expect(response.total).to.be.a('number');",
                    "  pm.expect(response.door_type_stats).to.exist;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors?state=closed&is_moving=false&page=1&limit=10",
                "host": ["{{baseUrl}}"],
                "path": ["doors"],
                "query": [
                  {
                    "key": "state",
                    "value": "closed"
                  },
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                }
              ],
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/capabilities",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "capabilities"]
              }
            },
            "response": []
          }
        ]
      },
      {
        "name": "Configuration",
        "item": [
          {
            "name": "Universal Configuration",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Door configured successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_type\": \"SERVO\",\n  \"open_angle\": 90,\n  \"close_angle\": 0,\n  \"movement_speed\": 5\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/configure",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "configure"]
              }
            },
            "response": []
          },
          {
            "name": "Servo Door Configuration",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Servo door configured successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_type\": \"SERVO\",\n  \"open_angle\": 90,\n  \"close_angle\": 0,\n  \"movement_speed\": 5\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/configure/servo",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "configure", "servo"]
              }
            },
            "response": []
          },
          {
            "name": "Rolling Door Configuration",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Rolling door configured successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_type\": \"ROLLING\",\n  \"open_rounds\": 3,\n  \"closed_rounds\": 0,\n  \"motor_speed\": 15\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/configure/rolling",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "configure", "rolling"]
              }
            },
            "response": []
          },
          {
            "name": "Sliding Door Configuration",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Sliding door configured successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_type\": \"SLIDING\",\n  \"motor_speed\": 100,\n  \"open_duration\": 2000,\n  \"close_duration\": 2000,\n  \"wait_before_close\": 5000,\n  \"auto_mode\": true,\n  \"pir1_enabled\": true,\n  \"pir2_enabled\": true\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/configure/sliding",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "configure", "sliding"]
              }
            },
            "response": []
          },
          {
            "name": "Update Door Config",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Door config updated successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"config\": {\n    \"servo_open_angle\": 90,\n    \"servo_close_angle\": 0,\n    \"movement_duration\": 1000,\n    \"auto_close_delay\": 30000,\n    \"obstacle_detection\": true,\n    \"manual_override_enabled\": true,\n    \"emergency_mode\": false,\n    \"max_retry_attempts\": 3\n  }\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/config",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "config"]
              }
            },
            "response": []
          }
        ]
      },
      {
        "name": "Calibration",
        "item": [
          {
            "name": "Universal Calibration",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Door calibration started successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_type\": \"SERVO\",\n  \"openAngle\": 90,\n  \"closeAngle\": 0,\n  \"save_to_eeprom\": true\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/calibrate",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "calibrate"]
              }
            },
            "response": []
          },
          {
            "name": "Servo Calibration",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Servo calibration started successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_type\": \"SERVO\",\n  \"openAngle\": 90,\n  \"closeAngle\": 0,\n  \"save_to_eeprom\": true\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/calibrate/servo",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "calibrate", "servo"]
              }
            },
            "response": []
          },
          {
            "name": "Rolling Calibration",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Rolling calibration started successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"door_type\": \"ROLLING\",\n  \"openRounds\": 3,\n  \"save_to_eeprom\": true\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "{{baseUrl}}/doors/{{doorSerial}}/calibrate/rolling",
                "host": ["{{baseUrl}}"],
                "path": ["doors", "{{doorSerial}}", "calibrate", "rolling"]
              }
            },
            "response": []
          },
          {
            "name": "Sliding Calibration",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "const response = pm.response.json();",
                    "pm.test('Sliding calibration started successfully', () => {",
                    "  pm.expect(pm.response.code).to.equal(200);",
                    "  pm.expect(response.success).to.be.true;",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{userAccessToken}}",
                  "type": "text"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
      },
      {
        "name": "Emergency Door Operation",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Emergency operation executed successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.affected_doors).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"trigger_source\": \"fire_alarm\",\n  \"affected_doors\": [\"{{doorSerial}}\", \"DOOR_XYZ789\"],\n  \"action\": \"open_all\",\n  \"override_manual\": true,\n  \"emergency_type\": \"fire\",\n  \"timestamp\": \"2025-07-10T12:00:00.000Z\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/doors/emergency",
            "host": ["{{baseUrl}}"],
            "path": ["doors", "emergency"]
          }
        },
        "response": []
      },
      {
        "name": "Get User Doors",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('User doors retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.doors).to.be.an('array');",
                "  pm.expect(response.total).to.be.a('number');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/doors?state=closed&is_moving=false&page=1&limit=10",
            "host": ["{{baseUrl}}"],
            "path": ["doors"],
            "query": [
              {
                "key": "state",
                "value": "closed"
              },
              {
                "key": "is_moving",
                "value": "false"
              },
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": []
      }
    ]
  }
]
