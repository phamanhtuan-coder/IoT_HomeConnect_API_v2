[
  {
    "name": "Alert",
    "item": [
      {
        "name": "Create Alert",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Alert created successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(201);",
                "  pm.expect(response.alert_id).to.exist;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"device_serial\": \"ABC123\",\n  \"space_id\": 1,\n  \"message\": \"Device malfunction\",\n  \"alert_type_id\": 1,\n  \"status\": \"unread\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/alerts",
            "host": ["{{baseUrl}}"],
            "path": ["alerts"]
          }
        },
        "response": []
      },
      {
        "name": "Update Alert",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Alert updated successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.alert_id).to.exist;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "PUT",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"message\": \"Updated malfunction alert\",\n  \"status\": \"read\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/alerts/:alertId",
            "host": ["{{baseUrl}}"],
            "path": ["alerts", ":alertId"],
            "variable": [
              {
                "key": "alertId",
                "value": "1"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Soft Delete Alert",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Alert soft deleted successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(204);",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "DELETE",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/alerts/:alertId/soft",
            "host": ["{{baseUrl}}"],
            "path": ["alerts", ":alertId", "soft"],
            "variable": [
              {
                "key": "alertId",
                "value": "1"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Hard Delete Alert",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Alert hard deleted successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(204);",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "DELETE",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/alerts/:alertId/hard",
            "host": ["{{baseUrl}}"],
            "path": ["alerts", ":alertId", "hard"],
            "variable": [
              {
                "key": "alertId",
                "value": "1"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get Alert by ID",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Alert retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.alert_id).to.exist;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/alerts/:alertId",
            "host": ["{{baseUrl}}"],
            "path": ["alerts", ":alertId"],
            "variable": [
              {
                "key": "alertId",
                "value": "1"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get All Alerts",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Alerts retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/alerts",
            "host": ["{{baseUrl}}"],
            "path": ["alerts"]
          }
        },
        "response": []
      }
    ]
  }
]