[
  {
    "name": "Group",
    "item": [
      {
        "name": "Get My Groups",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('My groups retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.data).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/groups/my-groups?page=1&limit=10",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "my-groups"],
            "query": [
              { "key": "page", "value": "1" },
              { "key": "limit", "value": "10" }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Create Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Group created successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(201);",
                "  pm.expect(response.group_id).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"group_name\": \"MyGroup\",\n  \"icon_name\": \"home\",\n  \"icon_color\": \"#FF5733\",\n  \"group_description\": \"My test group\"\n}",
            "options": { "raw": { "language": "json" } }
          },
          "url": { "raw": "{{baseUrl}}/groups", "host": ["{{baseUrl}}"], "path": ["groups"] }
        },
        "response": []
      },
      {
        "name": "Get Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Group retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.group_id).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/groups/1",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "1"]
          }
        },
        "response": []
      },
      {
        "name": "Update Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Group updated successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.group_id).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "PUT",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"group_name\": \"UpdatedGroup\",\n  \"icon_name\": \"building\",\n  \"icon_color\": \"#3366FF\",\n  \"group_description\": \"Updated group description\"\n}",
            "options": { "raw": { "language": "json" } }
          },
          "url": {
            "raw": "{{baseUrl}}/groups/1",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "1"]
          }
        },
        "response": []
      },
      {
        "name": "Delete Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Group deleted successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(204);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "DELETE",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/groups/1",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "1"]
          }
        },
        "response": []
      },
      {
        "name": "Add User to Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('User added to group successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(201);",
                "  pm.expect(response.user_group_id).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"groupId\": 1,\n  \"username\": \"user123\",\n  \"role\": \"member\"\n}",
            "options": { "raw": { "language": "json" } }
          },
          "url": { "raw": "{{baseUrl}}/groups/members", "host": ["{{baseUrl}}"], "path": ["groups", "members"] }
        },
        "response": []
      },
      {
        "name": "Update User Role in Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('User role updated successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.user_group_id).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "PUT",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"accountId\": \"user123\",\n  \"role\": \"vice\"\n}",
            "options": { "raw": { "language": "json" } }
          },
          "url": {
            "raw": "{{baseUrl}}/groups/1/members/role",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "1", "members", "role"]
          }
        },
        "response": []
      },
      {
        "name": "Get Users in Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Group members retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.data).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/groups/1/members",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "1", "members"]
          }
        },
        "response": []
      },
      {
        "name": "Remove User from Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('User removed from group successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(204);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "DELETE",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"accountId\": \"user123\"\n}",
            "options": { "raw": { "language": "json" } }
          },
          "url": {
            "raw": "{{baseUrl}}/groups/1/members",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "1", "members"]
          }
        },
        "response": []
      },
      {
        "name": "Get User Role in Group",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Role retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.role).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/groups/role/1",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "role", "1"]
          }
        },
        "response": []
      },
      {
        "name": "Get Owned Groups",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Owned groups retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/groups/owned",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "owned"]
          }
        },
        "response": []
      },
      {
        "name": "Get Member Groups",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Member groups retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            { "key": "Authorization", "value": "Bearer {{userAccessToken}}", "type": "text" }
          ],
          "url": {
            "raw": "{{baseUrl}}/groups/member",
            "host": ["{{baseUrl}}"],
            "path": ["groups", "member"]
          }
        },
        "response": []
      }
    ]
  }
]
