{
  "info": {
    "_postman_id": "2aff48d9-bf2f-46b5-b777-16d83e5b73ed",
    "name": "IoT Backend API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "40754195",
    "_collection_link": "https://www.postman.com/homeconnectapiws/homeconnectapi-v2/collection/swql8uh/iot-backend-api?action=share&source=collection_link&creator=40754195"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "userAccessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userRefreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "employeeAccessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "employeeRefreshToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.environment.set('userAccessToken', response.accessToken);",
                  "pm.environment.set('userRefreshToken', response.refreshToken || pm.environment.get('userRefreshToken'));",
                  "pm.environment.set('deviceUuid', response.deviceUuid);",
                  "pm.test('User login successful', () => {",
                  "  pm.expect(pm.response.code).to.equal(200);",
                  "  pm.expect(response.accessToken).to.exist;",
                  "  pm.expect(response.deviceUuid).to.be.a('string');",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\",\n  \"rememberMe\": true,\n  \"deviceName\": \"MyDevice\",\n  \"deviceId\": \"device123\",\n  \"deviceUuid\": \"\" // Có thể rỗng lần đầu, hoặc điền UUID từ lần trước\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Login Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "console.log('Login Employee Response:', response);",
                  "if (response.accessToken) {",
                  "    pm.environment.set('employeeAccessToken', response.accessToken);",
                  "    console.log('employeeAccessToken set to:', response.accessToken);",
                  "} else {",
                  "    console.log('No accessToken found in response');",
                  "}",
                  "if (response.refreshToken) {",
                  "    pm.environment.set('employeeRefreshToken', response.refreshToken);",
                  "} else {",
                  "    console.log('No refreshToken found, keeping existing:', pm.environment.get('employeeRefreshToken'));",
                  "}",
                  "pm.test('Employee login successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    pm.expect(response).to.have.property('accessToken').that.is.a('string').and.not.empty;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"adminuser\",\n  \"password\": \"admin123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/employee/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "employee",
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.environment.set('userAccessToken', response.token);",
                  "pm.test('User registration successful', () => {",
                  "  pm.expect(pm.response.code).to.equal(201);",
                  "  pm.expect(response.token).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"newuser\",\n  \"surname\": \"New\",\n  \"lastname\": \"User\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"newpassword123\",\n  \"phone\": \"1234567890\",\n  \"birthdate\": \"1990-01-01\",\n  \"gender\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.test('Employee registration successful', () => {",
                  "  pm.expect(pm.response.code).to.equal(201);",
                  "  pm.expect(response.token).to.exist;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"newadmin\",\n  \"surname\": \"New\",\n  \"lastname\": \"Admin\",\n  \"email\": \"newadmin@example.com\",\n  \"password\": \"admin123\",\n  \"role\": \"admin\",\n  \"phone\": \"0123456789\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/employee/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "employee",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Device Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.test('Device token updated successfully', () => {",
                  "  pm.expect(pm.response.code).to.equal(200);",
                  "  pm.expect(response.success).to.be.true;",
                  "  pm.expect(response.message).to.equal('Device token updated successfully');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deviceToken\": \"newFcmToken123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/update-device-token",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "update-device-token"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Refresh User Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.environment.set('userAccessToken', response.accessToken);",
                  "pm.test('User token refreshed', () => {",
                  "  pm.expect(pm.response.code).to.equal(200);",
                  "  pm.expect(response.accessToken).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{userRefreshToken}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "refresh"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Employee Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.environment.set('employeeAccessToken', response.accessToken);",
                  "pm.test('Employee token refreshed', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    pm.expect(response.accessToken).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{employeeRefreshToken}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/employee/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "employee",
                "refresh"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Logout User (Single Device)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userDeviceId\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "logout"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Logout Employee (Single Device)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/employee/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "employee",
                "logout"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Logout Multiple Devices",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userDeviceIds\": [1, 2]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout/multiple",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "logout",
                "multiple"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Logout All Devices",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout/all",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "logout",
                "all"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sync Tracking",
      "item": [
        {
          "name": "Get Own Sync History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sync/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sync",
                "me"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get User Sync History (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sync/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sync",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Full User Sync History (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sync/1/full",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sync",
                "1",
                "full"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Devices",
      "item": [
        {
          "name": "Get Own Devices",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/devices/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "devices",
                "me"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get User Devices (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/devices/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "devices",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Revoke Device",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/devices/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "devices",
                "1"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Test Mail",
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"0306221391@caothang.edu.vn\",\n  \"otp\": \"123456\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/notify/otp",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "notify",
            "otp"
          ]
        }
      },
      "response": []
    }
  ]
}