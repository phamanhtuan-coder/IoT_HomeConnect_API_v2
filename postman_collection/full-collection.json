{
	"info": {
		"_postman_id": "a49ce642-bf13-4fd1-b4f7-c0c5515c3c5e",
		"name": "IoT Backend API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "40754195-a49ce642-bf13-4fd1-b4f7-c0c5515c3c5e"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.environment.set('userAccessToken', response.accessToken);",
									"pm.environment.set('userRefreshToken', response.refreshToken || pm.environment.get('userRefreshToken'));",
									"pm.environment.set('deviceUuid', response.deviceUuid);",
									"pm.test('User login successful', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.accessToken).to.exist;",
									"  pm.expect(response.deviceUuid).to.be.a('string');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "5d7fe456-ab7f-4786-929c-61532e200ce6"
							}
						}
					],
					"id": "4060214f-1e19-40da-8c02-2e3ebd11763a",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\",\n  \"rememberMe\": true,\n  \"deviceName\": \"MyDevice\",\n  \"deviceId\": \"device123\",\n  \"deviceUuid\": \"\" // Có thể rỗng lần đầu, hoặc điền UUID từ lần trước\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"console.log('Login Employee Response:', response);",
									"if (response.accessToken) {",
									"    pm.environment.set('employeeAccessToken', response.accessToken);",
									"    console.log('employeeAccessToken set to:', response.accessToken);",
									"} else {",
									"    console.log('No accessToken found in response');",
									"}",
									"if (response.refreshToken) {",
									"    pm.environment.set('employeeRefreshToken', response.refreshToken);",
									"} else {",
									"    console.log('No refreshToken found, keeping existing:', pm.environment.get('employeeRefreshToken'));",
									"}",
									"pm.test('Employee login successful', () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"    pm.expect(response).to.have.property('accessToken').that.is.a('string').and.not.empty;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e5568ad1-b6d9-4a6f-9a38-bba843e21a5b"
							}
						}
					],
					"id": "f27027a2-87a2-47f1-b3b5-8c31d50bba82",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"adminuser\",\n  \"password\": \"admin123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/employee/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"employee",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.environment.set('userAccessToken', response.token);",
									"pm.test('User registration successful', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.token).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "d8304784-892b-4343-9db9-ba82ed997fbf"
							}
						}
					],
					"id": "7fb54da5-eaed-471c-b658-5bed3fcaafd2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"newuser\",\n  \"surname\": \"New\",\n  \"lastname\": \"User\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"newpassword123\",\n  \"phone\": \"1234567890\",\n  \"birthdate\": \"1990-01-01\",\n  \"gender\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Employee registration successful', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.token).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "af2f4437-3f01-467f-92f4-98de3e666a80"
							}
						}
					],
					"id": "45b62cae-1b30-46a8-a209-613cd8394bca",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"newadmin\",\n  \"surname\": \"New\",\n  \"lastname\": \"Admin\",\n  \"email\": \"newadmin@example.com\",\n  \"password\": \"admin123\",\n  \"role\": \"admin\",\n  \"phone\": \"0123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/employee/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"employee",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device token updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.success).to.be.true;",
									"  pm.expect(response.message).to.equal('Device token updated successfully');",
									"});"
								],
								"type": "text/javascript",
								"id": "5b59215e-d651-46f2-8dcc-18fb25f00355"
							}
						}
					],
					"id": "ab80617f-c305-4054-a5c7-d8ae39668e53",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deviceToken\": \"newFcmToken123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/update-device-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"update-device-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh User Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.environment.set('userAccessToken', response.accessToken);",
									"pm.test('User token refreshed', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.accessToken).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "573d6473-e63d-459e-bb2b-ca2da9d9b94f"
							}
						}
					],
					"id": "53e25dec-ddde-4e3b-a822-7bdfb6562333",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{userRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Employee Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.environment.set('employeeAccessToken', response.accessToken);",
									"pm.test('Employee token refreshed', () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"    pm.expect(response.accessToken).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "8e6bed40-6e2a-4c14-99db-d097553ed5c1"
							}
						}
					],
					"id": "7d635564-5bfb-4255-8568-56b4fff2ec84",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{employeeRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/employee/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"employee",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User (Single Device)",
					"id": "59a2134f-b6e7-410b-bfd8-2f7ee0c6d958",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userDeviceId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Employee (Single Device)",
					"id": "9b650cdd-876c-4db5-b375-95a1938e738c",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/employee/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"employee",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Multiple Devices",
					"id": "c805eb0a-466c-4d23-8300-d8942d06a8d8",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userDeviceIds\": [1, 2]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/logout/multiple",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout",
								"multiple"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout All Devices",
					"id": "97a90a4e-71a1-4404-9f77-83d0da592bd4",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/logout/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"logout",
								"all"
							]
						}
					},
					"response": []
				}
			],
			"id": "bde00d1e-64e5-41e7-942f-e58591b56117"
		},
		{
			"name": "Sync Tracking",
			"item": [
				{
					"name": "Get Own Sync History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Own sync history retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "bacbb901-2c2f-4b90-a1eb-2aba74265029"
							}
						}
					],
					"id": "2e3ba6cd-9df1-4fa1-a0b2-d08b83da3686",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sync-tracking/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sync-tracking",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Sync History (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('User sync history retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "45824cca-2461-4494-967b-0b496e3d5735"
							}
						}
					],
					"id": "7ef2f8cf-5178-49a4-bd7e-128299038557",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sync-tracking/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sync-tracking",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Full User Sync History (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Full user sync history retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "8459d77e-917d-42f8-8c25-22e238b96212"
							}
						}
					],
					"id": "c7791204-806d-4fb6-8a97-b18b55f5c358",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sync-tracking/user/:userId/full",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sync-tracking",
								"user",
								":userId",
								"full"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "ee6b4a48-57a8-40e5-82b6-0b3cd7cec212"
		},
		{
			"name": "User Devices",
			"item": [
				{
					"name": "Get Own Devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Own devices retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "f1c46e2b-ac67-48b5-bbcc-765bd987d90e"
							}
						}
					],
					"id": "89811fd6-c4ff-4f12-aa8d-8ce6396172a0",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user-devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user-devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Devices (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('User devices retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "49ca23fd-3c34-4f75-a65f-73515f75f020"
							}
						}
					],
					"id": "a4aff13f-dc67-43ed-b105-709d9b92adf7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user-devices/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user-devices",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Device revoked successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"id": "7b60348b-351d-443d-91b5-05c1ab736c07"
							}
						}
					],
					"id": "96062e76-343d-47a6-81d6-d050454f4134",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user-devices/:deviceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user-devices",
								":deviceId"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "a899b4b1-0a8b-44c9-849e-4c9a47d47a60"
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "Create Notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Notification created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "904af2b2-efbb-4ba4-b597-8fb809ec35e5"
							}
						}
					],
					"id": "41c545b4-dd60-4eff-a197-e3e0ca24e237",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"account_id\": \"user123\",\n  \"role_id\": 1,\n  \"text\": \"System maintenance scheduled\",\n  \"type\": \"SYSTEM\",\n  \"is_read\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Notification updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "ee2032e1-a654-4d8c-93d0-426e7adc4efa"
							}
						}
					],
					"id": "70a43c84-def3-4be8-9dc3-dee738fa9354",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"is_read\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Notification deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "d02e70a7-4284-4e82-a1ff-f06e7647aafa"
							}
						}
					],
					"id": "0cdc0191-1bac-4444-844a-1897b4fa3705",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Notification by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Notification retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "d15f9634-0787-4a43-a54a-165845f5aa4d"
							}
						}
					],
					"id": "e0bffc01-a08d-486b-89a8-c1583226b353",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Notifications by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Notifications retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "49b99c3f-83b9-442d-9acd-4092da192646"
							}
						}
					],
					"id": "783b93d3-a77c-40cc-af95-8e19aa46043f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Notifications retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c67a89ba-90f0-439c-a44d-aa8c083ea395"
							}
						}
					],
					"id": "a363b01d-8834-4730-9709-f49cba6d81aa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications?account_id=user123&type=SYSTEM&is_read=false&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "account_id",
									"value": "user123"
								},
								{
									"key": "type",
									"value": "SYSTEM"
								},
								{
									"key": "is_read",
									"value": "false"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('OTP sent successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.message).to.equal('OTP sent successfully');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0aef64a4-115d-4664-818b-c88120b29e79"
							}
						}
					],
					"id": "fa966bb4-0661-454f-9166-fd6fedfb2382",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('OTP generated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.message).to.equal('OTP generated and sent successfully');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "282f55fa-42b4-4809-91a3-f7ac42651fc0"
							}
						}
					],
					"id": "fc96e74f-e811-42a7-858e-cb561dfb4693",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/otp/generate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"otp",
								"generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('OTP verification completed', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.message).to.be.oneOf(['OTP verified successfully', 'OTP verification failed']);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "505912b3-c2a3-4534-b094-8d87962f7201"
							}
						}
					],
					"id": "22c03c5c-cb9d-4bf4-82df-ae52f82d93c8",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\",\n  \"otp\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/otp/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"otp",
								"verify"
							]
						}
					},
					"response": []
				}
			],
			"id": "9a395ad2-4e62-4684-806c-b5f22b0f5ad4"
		},
		{
			"name": "Device",
			"item": [
				{
					"name": "Create Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.deviceId).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "dc0ca330-b631-44fd-91a2-20174ef2ef76"
							}
						}
					],
					"id": "81b262ad-fd4e-42bd-9092-36f9f3e57319",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"templateId\": 1,\n  \"serial_number\": \"ABC123\",\n  \"spaceId\": 1,\n  \"name\": \"MyDevice\",\n  \"attribute\": {\"brightness\": 50},\n  \"wifi_ssid\": \"MyWiFi\",\n  \"wifi_password\": \"wifi123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Link Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device linked successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.deviceId).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "29565ee8-9bde-43f1-b64e-4b328459cad6"
							}
						}
					],
					"id": "d684b462-1144-464b-b03c-e080202171fb",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serial_number\": \"ABC123\",\n  \"spaceId\": 1,\n  \"name\": \"LinkedDevice\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices/link",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								"link"
							]
						}
					},
					"response": []
				},
				{
					"name": "Toggle Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device toggled successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.deviceId).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "3f111649-7955-4faa-b447-59fec0b90b0b"
							}
						}
					],
					"id": "f92e0571-cea7-4110-98ef-25e0446b0e2e",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"power_status\": true,\n  \"serial_number\": \"ABC123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:deviceId/toggle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":deviceId",
								"toggle"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device Attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device attributes updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.deviceId).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "395200d0-8225-4f12-82ab-8427f164a6ad"
							}
						}
					],
					"id": "4a5b09b8-9aec-46e1-85f1-c7d22e4375ce",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brightness\": 50,\n  \"color\": \"white\",\n  \"serial_number\": \"ABC123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:deviceId/attributes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":deviceId",
								"attributes"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices by Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Devices retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "df1eb0f0-4acf-4082-a7e0-775c1f73529b"
							}
						}
					],
					"id": "f7ef99a5-41cd-4bfd-9070-6568e7bb39b9",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								"account"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices by Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Devices retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "85830ebe-10c0-4a17-8c19-f0dd82ab7509"
							}
						}
					],
					"id": "0283e9c3-d829-4fff-b46d-8c6af72e5bc8",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/group/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								"group",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices by House",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Devices retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "2f27ff52-af2c-4ed8-9ebb-7f7fc60e5aa7"
							}
						}
					],
					"id": "c00089a2-1a38-4191-8256-20156396bfc3",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/house/:houseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								"house",
								":houseId"
							],
							"variable": [
								{
									"key": "houseId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices by Space",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Devices retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "2a21067d-8135-448c-97fe-eeb578bbccee"
							}
						}
					],
					"id": "f70aa5e1-fc10-403f-a871-712f69d51d1f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/space/:spaceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								"space",
								":spaceId"
							],
							"variable": [
								{
									"key": "spaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.deviceId).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "853fd401-176a-4abc-892a-8d6e0abcfb96"
							}
						}
					],
					"id": "34ff8891-e772-437e-9954-feb16bc42faa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serial_number\": \"ABC123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:deviceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":deviceId"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlink Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Device unlinked successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"id": "2cb3dcaf-c0fd-437c-810b-6d6fc5c244b9"
							}
						}
					],
					"id": "d816b0a2-2b25-4c32-aadd-f9c9ba5c5fc5",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serial_number\": \"ABC123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:deviceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":deviceId"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device Space",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device space updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.deviceId).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "cf30c93c-73c3-4431-b9ca-eddd17202654"
							}
						}
					],
					"id": "51407672-d1ed-4113-a455-59fddff03e7b",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"spaceId\": 2,\n  \"serial_number\": \"ABC123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:deviceId/space",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":deviceId",
								"space"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device WiFi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device WiFi updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.deviceId).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "f3f49156-a8b7-434f-8adc-224cba5b38bd"
							}
						}
					],
					"id": "c42d37cd-3e81-491a-bcd8-5ea59ba6b3f5",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"wifi_ssid\": \"MyWiFi\",\n  \"wifi_password\": \"wifi123\",\n  \"serial_number\": \"ABC123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/devices/:deviceId/wifi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":deviceId",
								"wifi"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "ad5b8f88-57a9-483b-8eaa-370a22dfe531"
		},
		{
			"name": "Group",
			"item": [
				{
					"name": "Create Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Group created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.group_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "bbc9aa15-a27d-45b0-9b1b-045eac9b5d3f"
							}
						}
					],
					"id": "0e2fdd3b-438b-4a15-b13c-ece2d6fe1bc9",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"group_name\": \"MyGroup\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Group retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.group_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "13b84868-da5d-475a-bc67-30b2096360fa"
							}
						}
					],
					"id": "134f5546-af33-4c7a-a769-764ea4bd4f18",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Group Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Group name updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.group_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "e67a97c1-12e4-4f77-8f17-e548debbfb6a"
							}
						}
					],
					"id": "9347dd44-79c2-4c47-b91b-cf8fc38272b2",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"group_name\": \"UpdatedGroup\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Group deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"id": "abaa68c5-0492-485a-8e9d-9026361dd426"
							}
						}
					],
					"id": "805d3221-4419-4ea6-ac67-8ebce1633d6f",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User to Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('User added to group successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.group_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "aef1f238-fa11-45b3-8abb-deeb2b9834e6"
							}
						}
					],
					"id": "161fee41-9e77-4532-a820-61e92ef3a2c4",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupId\": 1,\n  \"accountId\": \"user123\",\n  \"role\": \"MEMBER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Role in Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('User role updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.group_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "1a616c31-54d4-46a5-a1f0-8f063387c11b"
							}
						}
					],
					"id": "4d570815-f7d3-4903-b445-38d9dbca500b",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"user123\",\n  \"role\": \"VICE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/:groupId/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":groupId",
								"users"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove User from Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('User removed from group successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"id": "96689dfc-eea0-4cbd-8c58-a559f4ac5933"
							}
						}
					],
					"id": "5c62834e-52d7-4505-9429-1755a45cbe60",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"user123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/:groupId/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								":groupId",
								"users"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "bd475e51-8095-45d3-a473-d96cfd1fb933"
		},
		{
			"name": "House",
			"item": [
				{
					"name": "Create House",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('House created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.house_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "8c8e7869-1a55-462b-acb6-32d42c399e9e"
							}
						}
					],
					"id": "f05d6f76-55d3-4a69-9cca-4852a6f9cde8",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupId\": 1,\n  \"house_name\": \"MyHouse\",\n  \"address\": \"123 Main St\",\n  \"icon_name\": \"home\",\n  \"icon_color\": \"blue\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/houses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"houses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Houses by Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Houses retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "fb03402a-a0c3-4191-8f9c-b94bfd465765"
							}
						}
					],
					"id": "3e034549-b58a-4e90-8702-26a181a4d09c",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/houses/group/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"houses",
								"group",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get House by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('House retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.house_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "ecdd4199-e2d6-43fe-b9fa-0d0b74d52810"
							}
						}
					],
					"id": "4d1d7855-db64-447f-9b52-6f03220acb52",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/houses/:houseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"houses",
								":houseId"
							],
							"variable": [
								{
									"key": "houseId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update House",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('House updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.house_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "0f738687-d42c-4500-a836-fce76de9a62b"
							}
						}
					],
					"id": "29eb74a0-8287-43dc-af76-8e69bb83d5b3",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupId\": 1,\n  \"house_name\": \"UpdatedHouse\",\n  \"address\": \"456 Elm St\",\n  \"icon_name\": \"house\",\n  \"icon_color\": \"green\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/houses/:houseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"houses",
								":houseId"
							],
							"variable": [
								{
									"key": "houseId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete House",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('House deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"id": "c12c8946-1ca2-402f-88a2-35498df542a4"
							}
						}
					],
					"id": "5198cb7f-f022-4fe3-894e-cd4f09f5aad8",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/houses/:houseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"houses",
								":houseId"
							],
							"variable": [
								{
									"key": "houseId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "916c1002-38ba-4f67-84a5-a1802ac42767"
		},
		{
			"name": "Space",
			"item": [
				{
					"name": "Create Space",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Space created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.space_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "e9fd6d24-d867-4948-8301-d2bc75fdcd04"
							}
						}
					],
					"id": "cb2f8a8e-56e1-4364-a96e-39a2c3ff84cc",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"houseId\": 1,\n  \"space_name\": \"MyRoom\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spaces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Spaces by House",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Spaces retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"id": "0e74e9a6-97d5-4634-ad25-3a94ab686d7f"
							}
						}
					],
					"id": "18e5db40-a43c-40f4-8113-6a2c64b87c23",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/spaces/house/:houseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces",
								"house",
								":houseId"
							],
							"variable": [
								{
									"key": "houseId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Space by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Space retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.space_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "d16077da-565a-4c32-9a0b-29a3af030a18"
							}
						}
					],
					"id": "180d0cc3-1e6f-4a08-86bc-a61bd57655a5",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/spaces/:spaceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces",
								":spaceId"
							],
							"variable": [
								{
									"key": "spaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Space",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Space updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.space_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "4d95d361-b450-4f43-b2ec-35b669711af7"
							}
						}
					],
					"id": "ad06bea7-3d4c-4d51-a870-69c5f35ee732",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"space_name\": \"UpdatedRoom\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spaces/:spaceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces",
								":spaceId"
							],
							"variable": [
								{
									"key": "spaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Space",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Space deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"id": "4ebe3440-c90c-41e6-8b79-525b41fe3f3d"
							}
						}
					],
					"id": "4ed6339d-f3f0-4efb-9091-c9f8c724031d",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/spaces/:spaceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces",
								":spaceId"
							],
							"variable": [
								{
									"key": "spaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Space Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Space name retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.name).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"id": "9437fa04-7c45-413c-82b9-ec906361c26d"
							}
						}
					],
					"id": "3f63e1ad-e8f4-4dcf-9391-f9945b1c195f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/spaces/:spaceId/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces",
								":spaceId",
								"name"
							],
							"variable": [
								{
									"key": "spaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "828adaf1-6de6-4cc6-a8b1-1872d1ddaa3a"
		},
		{
			"name": "Shared Permissions",
			"item": [
				{
					"name": "Revoke Share Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Share device revoked successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"id": "a4840c4b-0bf8-4d18-9b5f-218b197445d8"
							}
						}
					],
					"id": "a2dfb029-0d6e-49fe-8693-62ca940e1005",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissions/:permissionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								":permissionId"
							],
							"variable": [
								{
									"key": "permissionId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Share by Recipient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Share revoked by recipient successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"id": "236525aa-2068-4c5d-bdd5-02bec1514604"
							}
						}
					],
					"id": "33f6690a-458d-4e81-bc13-20390f959dae",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permissions/recipient/:permissionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								"recipient",
								":permissionId"
							],
							"variable": [
								{
									"key": "permissionId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Permission",
					"id": "4b40b137-e377-4df4-b605-e6f926724864",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Permission by ID",
					"id": "d3cc8812-3a6a-4c5e-8032-56c5c7bf9d0b",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permissions/:permissionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								":permissionId"
							],
							"variable": [
								{
									"key": "permissionId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Permission",
					"id": "cca6ecfc-2b8f-459c-a490-209522b3dfb3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permissions/:permissionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								":permissionId"
							],
							"variable": [
								{
									"key": "permissionId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Permission",
					"id": "d4200516-58eb-4c7a-8ae1-82a47ad69711",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permissions/:permissionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								":permissionId"
							],
							"variable": [
								{
									"key": "permissionId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Permissions",
					"id": "c873dd40-7c20-45a1-9174-6fa10997f186",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permissions/device/:deviceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								"device",
								":deviceId"
							],
							"variable": [
								{
									"key": "deviceId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Permissions",
					"id": "62a9c9b7-6a7f-4ba2-a11f-f31e1285884a",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/permissions/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permissions",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "9781e6dd-ed66-4bc6-9388-9e7742f28b6a"
		},
		{
			"name": "Share Requests",
			"item": [
				{
					"name": "Initiate Share Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Share request initiated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.message).to.equal('Share request initiated');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "9e8de700-00a0-4de6-a918-3e9152a9a29d"
							}
						}
					],
					"id": "8ab44531-ebfd-4028-9b85-7e34e422d7eb",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_serial\": \"ABC123\",\n  \"to_user_email\": \"user@example.com\",\n  \"permission_type\": \"CONTROL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/share-requests/:groupId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve Share Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Share request processed successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.message).to.be.oneOf(['Share request approved', 'Share request rejected']);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a3b84584-144f-467d-8901-b49973f27270"
							}
						}
					],
					"id": "50c4128d-50aa-45da-aa93-01437e3f1ba7",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accept\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/share-requests/approve/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								"approve",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Share Requests by Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Share requests retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "5ead73f8-19c5-4bb2-95b3-a9e53348c805"
							}
						}
					],
					"id": "813ea67b-1199-40e7-9e39-6c703f0d0659",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/share-requests/device/:deviceId/group/:groupId?serial_number=ABC123",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								"device",
								":deviceId",
								"group",
								":groupId"
							],
							"query": [
								{
									"key": "serial_number",
									"value": "ABC123"
								}
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								},
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shared Permissions by Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Shared permissions retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "60de1f27-1f35-4750-a5e8-8dfe1cdabc55"
							}
						}
					],
					"id": "0aaf9297-6428-49f8-80f2-79c95c977a49",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/share-requests/permissions/device/:deviceId/group/:groupId?serial_number=ABC123",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								"permissions",
								"device",
								":deviceId",
								"group",
								":groupId"
							],
							"query": [
								{
									"key": "serial_number",
									"value": "ABC123"
								}
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "1"
								},
								{
									"key": "groupId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shared Devices by Owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Shared devices retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0fc5d7fc-37b7-4973-9254-7bb290217679"
							}
						}
					],
					"id": "db73815f-fd44-411f-a295-88cd284dcdc4",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/share-requests/owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								"owner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Share Request",
					"id": "68c9b5f7-4118-49d7-b334-a3958b8a42b9",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_serial\": \"ABC123\",\n  \"to_user_email\": \"user@example.com\",\n  \"permission_type\": \"CONTROL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/share-requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Share Request by ID",
					"id": "85ba45ef-1f56-4a51-8e5f-3fc01f5e0c3c",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/share-requests/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Share Request",
					"id": "a0dee4ca-c0cf-4e1c-b003-b82ac2b2b0f2",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"permission_type\": \"VIEW\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/share-requests/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Share Request",
					"id": "3746074b-46c3-45e7-8090-bb1b9101d48c",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/share-requests/:requestId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								":requestId"
							],
							"variable": [
								{
									"key": "requestId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pending Share Requests",
					"id": "39c5361a-4574-4535-8fef-351d892d47c8",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/share-requests/pending",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"share-requests",
								"pending"
							]
						}
					},
					"response": []
				}
			],
			"id": "571844fc-e3ae-4356-b2bc-de32a60ee164"
		},
		{
			"name": "Alert Type",
			"item": [
				{
					"name": "Create Alert Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Alert type created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.alert_type_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "5601ef85-ade4-448e-a28b-516299f9a5ec"
							}
						}
					],
					"id": "75e47a10-7bdc-42f8-b273-6c28b584b1bf",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alert_type_name\": \"Critical Alert\",\n  \"priority\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alert-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alert-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Alert Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Alert type updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.alert_type_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e5fac890-acf6-4bf1-b21f-6b6ea6ca66ef"
							}
						}
					],
					"id": "d5e4f2b1-aae2-42e3-8bcb-174c9d3169cc",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alert_type_name\": \"Updated Alert\",\n  \"priority\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alert-types/:alertTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alert-types",
								":alertTypeId"
							],
							"variable": [
								{
									"key": "alertTypeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Alert Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Alert type deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6da3e1a0-9861-49aa-bf98-26140f8b1694"
							}
						}
					],
					"id": "4f0badca-0e4d-49d6-bb0f-8a4de12937c7",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alert-types/:alertTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alert-types",
								":alertTypeId"
							],
							"variable": [
								{
									"key": "alertTypeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Alert Type by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Alert type retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.alert_type_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f61858dd-4536-4cd2-a2f3-7c8fc6470200"
							}
						}
					],
					"id": "59cdeef2-54ef-4992-b843-ca9a1b0beb72",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alert-types/:alertTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alert-types",
								":alertTypeId"
							],
							"variable": [
								{
									"key": "alertTypeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Alert Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Alert types retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "26d9866e-e857-4181-9083-624c43ac3c4e"
							}
						}
					],
					"id": "f342c8b7-c8d9-42ef-943c-8d9fec7e8c81",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alert-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alert-types"
							]
						}
					},
					"response": []
				}
			],
			"id": "ec7a83f8-ef0a-4954-b0a6-82e86e5807da"
		},
		{
			"name": "Alert",
			"item": [
				{
					"name": "Create Alert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Alert created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.alert_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "cf5b9d94-b82b-48a8-a502-b00c2af0e326"
							}
						}
					],
					"id": "56280bad-7aeb-41e1-af92-e445ba7ed7cf",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_serial\": \"ABC123\",\n  \"space_id\": 1,\n  \"message\": \"Device malfunction\",\n  \"alert_type_id\": 1,\n  \"status\": \"unread\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alerts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Alert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Alert updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.alert_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "2fb0108a-e03f-4b1a-a531-f73bb8d85349"
							}
						}
					],
					"id": "356955b5-7120-4f8d-af0d-e0aa13ef2ec3",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Updated malfunction alert\",\n  \"status\": \"read\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/alerts/:alertId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts",
								":alertId"
							],
							"variable": [
								{
									"key": "alertId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Soft Delete Alert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Alert soft deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "783f8b07-48ba-4537-b7fe-8811966d0b50"
							}
						}
					],
					"id": "331038c9-3324-421b-a5f3-e4c533a30e41",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alerts/:alertId/soft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts",
								":alertId",
								"soft"
							],
							"variable": [
								{
									"key": "alertId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Hard Delete Alert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Alert hard deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "87994991-995e-4396-b914-05102739b2df"
							}
						}
					],
					"id": "3296d83f-2da4-49dc-a589-20043e24adba",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alerts/:alertId/hard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts",
								":alertId",
								"hard"
							],
							"variable": [
								{
									"key": "alertId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Alert by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Alert retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.alert_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6cb54842-a5b1-40d6-90a2-752fb22a739c"
							}
						}
					],
					"id": "cb65b93f-6cad-4d68-9a8a-5bf5df9d45b2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alerts/:alertId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts",
								":alertId"
							],
							"variable": [
								{
									"key": "alertId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Alerts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Alerts retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0676070d-dc40-4139-80e4-89b61984299a"
							}
						}
					],
					"id": "71a7f32a-ca28-4202-8a6e-43e1f9d2fa7a",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/alerts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"alerts"
							]
						}
					},
					"response": []
				}
			],
			"id": "d0babc16-ca38-4c51-b2c4-f061f2db3807"
		},
		{
			"name": "Firmware",
			"item": [
				{
					"name": "Create Firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Firmware created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.firmware_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "00cc79dd-0fff-4a29-9644-8ebcb129ca0b"
							}
						}
					],
					"id": "ef4e7639-d6c8-47ea-89c4-6e5fbcd57941",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"version\": \"1.0.0\",\n  \"file_path\": \"/firmware/v1.0.0.bin\",\n  \"template_id\": 1,\n  \"is_mandatory\": true,\n  \"note\": \"Initial firmware release\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/firmwares",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmwares"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Firmware updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.firmware_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "9441237f-5e36-4020-8cc7-33d4e4330e88"
							}
						}
					],
					"id": "76722a3b-0d7d-4650-95f5-b35d0c74bdac",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"version\": \"1.0.1\",\n  \"file_path\": \"/firmware/v1.0.1.bin\",\n  \"is_mandatory\": false,\n  \"is_approved\": true,\n  \"tested_at\": \"2025-05-20T12:00:00Z\",\n  \"note\": \"Updated firmware release\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/firmwares/:firmwareId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmwares",
								":firmwareId"
							],
							"variable": [
								{
									"key": "firmwareId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Firmware",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Firmware deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f341cb3e-927d-476f-a0e2-83a06738831e"
							}
						}
					],
					"id": "63ab69fd-d309-40f1-b565-e46d3b4ed394",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/firmwares/:firmwareId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmwares",
								":firmwareId"
							],
							"variable": [
								{
									"key": "firmwareId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Firmware by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Firmware retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.firmware_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "49a5310a-ad08-43ed-8322-1ed16d46e314"
							}
						}
					],
					"id": "6368714b-3671-4d67-8e96-70b8e5d7eac0",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/firmwares/:firmwareId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmwares",
								":firmwareId"
							],
							"variable": [
								{
									"key": "firmwareId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Firmwares",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Firmwares retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "822b08a7-5048-4b1f-b7ee-b08e4e6a778c"
							}
						}
					],
					"id": "99c753d2-dae5-4901-b8f3-7b3222c5d49d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/firmwares",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmwares"
							]
						}
					},
					"response": []
				}
			],
			"id": "ba2471ed-712c-4899-901c-f5fe898ec0ba"
		},
		{
			"name": "Firmware Update History",
			"item": [
				{
					"name": "Create Firmware Update History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Firmware update history created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.update_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "75aafc11-237e-492f-ba91-1999c999f0e7"
							}
						}
					],
					"id": "923bee68-822c-4bb9-9fb4-fc35eb1d5119",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_serial\": \"ABC123\",\n  \"firmware_id\": 1,\n  \"status\": \"success\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/firmware-update-histories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmware-update-histories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Firmware Update History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Firmware update history updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.update_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "951f8983-4a91-4bd0-b61f-5db7a446b1a2"
							}
						}
					],
					"id": "d5ee6c48-b387-453b-99cb-4f8a1e403a8f",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"failed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/firmware-update-histories/:updateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmware-update-histories",
								":updateId"
							],
							"variable": [
								{
									"key": "updateId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Firmware Update History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Firmware update history deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "57b4190a-de19-4faa-ad11-5ff15a1c6614"
							}
						}
					],
					"id": "0596f3d0-386e-4d16-848c-33b6d383e81c",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/firmware-update-histories/:updateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmware-update-histories",
								":updateId"
							],
							"variable": [
								{
									"key": "updateId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Firmware Update History by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Firmware update history retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.update_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0f768c25-0a74-4f48-b934-876bb30b5996"
							}
						}
					],
					"id": "56789d10-22f5-49e1-a556-74dfc6f0b674",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/firmware-update-histories/:updateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmware-update-histories",
								":updateId"
							],
							"variable": [
								{
									"key": "updateId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Firmware Update Histories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Firmware update histories retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c45c1594-d345-4aa2-a1fe-134f5026a2e2"
							}
						}
					],
					"id": "e9c382f4-55ce-4bf1-995f-83e5a5c318d7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/firmware-update-histories?device_serial=ABC123&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"firmware-update-histories"
							],
							"query": [
								{
									"key": "device_serial",
									"value": "ABC123"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "001217fa-438f-4ca6-98eb-80e40d5bf14c"
		},
		{
			"name": "Ownership History",
			"item": [
				{
					"name": "Initiate Ownership Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ownership transfer initiated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.message).to.equal('Ownership transfer request initiated');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "1b854a82-dee2-4aba-9184-da08f3ba47fc"
							}
						}
					],
					"id": "a4ef5195-6ebb-4a9e-adee-cd532175d190",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_serial\": \"ABC123\",\n  \"to_user_email\": \"newuser@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ownership-history/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ownership-history",
								"transfer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve Ownership Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ownership transfer processed successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.message).to.be.oneOf(['Ownership transfer approved', 'Ownership transfer rejected']);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "368aff16-65d1-492b-8130-0d82434e554f"
							}
						}
					],
					"id": "d3765c7b-170d-4003-a75c-ac21219818ec",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accept\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ownership-history/transfer/:ticketId/approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ownership-history",
								"transfer",
								":ticketId",
								"approve"
							],
							"variable": [
								{
									"key": "ticketId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ownership History by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ownership history retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.history_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "16464cb3-a0ef-4b27-b03f-7fda91aafde5"
							}
						}
					],
					"id": "26c76875-6c78-4897-951d-dc7f0cfb4377",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ownership-history/:historyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ownership-history",
								":historyId"
							],
							"variable": [
								{
									"key": "historyId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ownership History by Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ownership histories retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "f850eea3-9582-403a-8806-8d1cc353dfa4"
							}
						}
					],
					"id": "de2cca9a-7e61-41b5-951a-6d5989845b5d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ownership-history/device/:device_serial",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ownership-history",
								"device",
								":device_serial"
							],
							"variable": [
								{
									"key": "device_serial",
									"value": "ABC123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ownership History by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ownership histories retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "7b19e6d0-5bd9-4097-b1d6-9a288ad71331"
							}
						}
					],
					"id": "c1d1e44a-1e50-4ec8-8b93-474023f0988e",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ownership-history/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ownership-history",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Ownership History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ownership history deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.message).to.equal('Ownership history deleted');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "168c37ca-985a-451b-b6ab-54b98fad4374"
							}
						}
					],
					"id": "6a1b25ca-294b-4718-b24a-c5d89dce5d6a",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ownership-history/:historyId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ownership-history",
								":historyId"
							],
							"variable": [
								{
									"key": "historyId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "1e0fc0db-06ed-4c35-b98c-d326a048de9c"
		},
		{
			"name": "Ticket Type",
			"item": [
				{
					"name": "Create Ticket Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ticket type created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.ticket_type_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "bdcd6bb6-68b6-4676-8008-d4218c02f420"
							}
						}
					],
					"id": "4775399f-be46-45ab-b094-5069d560b1e8",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type_name\": \"Hardware Issue\",\n  \"priority\": 2,\n  \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ticket-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Ticket Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ticket type updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.ticket_type_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "cfbe9c68-26c4-4cdb-b367-0174f8f05333"
							}
						}
					],
					"id": "1800163e-e9f8-4afa-8b89-9f9ed742ced0",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type_name\": \"Updated Hardware Issue\",\n  \"priority\": 3,\n  \"is_active\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ticket-types/:ticketTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket-types",
								":ticketTypeId"
							],
							"variable": [
								{
									"key": "ticketTypeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Ticket Type Priority",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ticket type priority updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.ticket_type_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "d559a861-302f-43d5-9d94-6f87600ff45a"
							}
						}
					],
					"id": "23ba3fbd-2632-4ccd-988c-8ae8c912c535",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"priority\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ticket-types/:ticketTypeId/priority",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket-types",
								":ticketTypeId",
								"priority"
							],
							"variable": [
								{
									"key": "ticketTypeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Ticket Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Ticket type deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e023abfe-42a1-4beb-8956-276cf266c4d9"
							}
						}
					],
					"id": "1c5e32eb-5227-4249-b122-29586744c9e3",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ticket-types/:ticketTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket-types",
								":ticketTypeId"
							],
							"variable": [
								{
									"key": "ticketTypeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ticket Type by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ticket type retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.ticket_type_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e78d787b-bb7d-456f-a9b6-cd7bd3e4d8ed"
							}
						}
					],
					"id": "7e1f8fe0-107d-4f51-a368-4f70789aa220",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ticket-types/:ticketTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket-types",
								":ticketTypeId"
							],
							"variable": [
								{
									"key": "ticketTypeId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Ticket Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ticket types retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "4f169492-506f-45b5-b1f4-c7cec09d5372"
							}
						}
					],
					"id": "b82c4502-a170-4000-9aec-61d3458080a1",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ticket-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket-types"
							]
						}
					},
					"response": []
				}
			],
			"id": "544c7bbe-74a3-44c5-aabe-a5b1a75e2510"
		},
		{
			"name": "Ticket",
			"item": [
				{
					"name": "Create Ticket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ticket created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.ticket_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "fb7119c6-3d0f-4457-886d-ba3daceda9bb"
							}
						}
					],
					"id": "87d95869-a5c2-4915-8f81-674dde3002d3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_serial\": \"ABC123\",\n  \"ticket_type_id\": 1,\n  \"description\": \"Device not responding\",\n  \"evidence\": {\"image\": \"error.jpg\"}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Ticket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ticket updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.ticket_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8a2c0cea-4ed0-4571-9155-da49cba0c6a0"
							}
						}
					],
					"id": "bb98b2a8-ff52-4400-ad74-faf71976e64e",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Updated issue description\",\n  \"evidence\": {\"image\": \"updated_error.jpg\"},\n  \"status\": \"in_progress\",\n  \"assigned_to\": \"employee123\",\n  \"resolve_solution\": \"Restart device\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tickets/:ticketId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets",
								":ticketId"
							],
							"variable": [
								{
									"key": "ticketId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Ticket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Ticket deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "555c88a7-a22f-40c8-8588-df8414abf2b9"
							}
						}
					],
					"id": "3e0dd9cd-9f9c-4759-9872-0e7a93043e17",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tickets/:ticketId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets",
								":ticketId"
							],
							"variable": [
								{
									"key": "ticketId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ticket by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Ticket retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.ticket_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "3fdefaab-fb68-4049-9dfb-b4dbc6bd7530"
							}
						}
					],
					"id": "08d4a3e8-046b-4bc0-be4a-0a6c6f02e519",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tickets/:ticketId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets",
								":ticketId"
							],
							"variable": [
								{
									"key": "ticketId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tickets by User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Tickets retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "2cb6f576-7d62-4889-acdd-d7179b27cba9"
							}
						}
					],
					"id": "72a4dca9-39b8-42a8-8155-fe8fd1ca0013",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tickets/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tickets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Tickets retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "beee0148-01f8-4b69-8558-5a589d6151d8"
							}
						}
					],
					"id": "c501d790-ed1a-430f-be7a-65fdcd5df1f4",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tickets?user_id=user123&ticket_type_id=1&status=pending&created_at_start=2025-01-01T00:00:00Z&created_at_end=2025-12-31T23:59:59Z&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets"
							],
							"query": [
								{
									"key": "user_id",
									"value": "user123"
								},
								{
									"key": "ticket_type_id",
									"value": "1"
								},
								{
									"key": "status",
									"value": "pending"
								},
								{
									"key": "created_at_start",
									"value": "2025-01-01T00:00:00Z"
								},
								{
									"key": "created_at_end",
									"value": "2025-12-31T23:59:59Z"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "fb5e0283-8edc-49a6-9717-2e34afbb7948"
		},
		{
			"name": "Hourly Value",
			"item": [
				{
					"name": "Create Hourly Value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Hourly Value created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.hourly_value_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "134ff4e0-2def-4c91-85e2-ceb5f2149cc0"
							}
						}
					],
					"id": "99379b46-d668-48d2-b81d-08ead616f8c6",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_serial\": \"ABC123\",\n  \"space_id\": 1,\n  \"hour_timestamp\": \"2025-05-20T10:00:00Z\",\n  \"avg_value\": {\"temperature\": 25.5, \"humidity\": 60, \"gas\": 200},\n  \"sample_count\": 360\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/hourly-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Hourly Value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Hourly Value updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.hourly_value_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "fef54efa-36eb-4299-badb-cf26219aa800"
							}
						}
					],
					"id": "856abd71-a813-47c7-9534-633d87726246",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"avg_value\": {\"temperature\": 26.0, \"humidity\": 65, \"gas\": 210},\n  \"sample_count\": 400\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/hourly-values/:hourlyValueId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values",
								":hourlyValueId"
							],
							"variable": [
								{
									"key": "hourlyValueId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Soft Delete Hourly Value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Hourly Value soft deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "74fc47d7-482d-4d85-a5df-eb2121088ce2"
							}
						}
					],
					"id": "73676305-3cd6-4127-94d0-6336e70aa497",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hourly-values/:hourlyValueId/soft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values",
								":hourlyValueId",
								"soft"
							],
							"variable": [
								{
									"key": "hourlyValueId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Hard Delete Hourly Value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Hourly Value hard deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "36bfc4b6-db5f-4ffa-9d93-e3961a7f37bb"
							}
						}
					],
					"id": "94620d9a-f674-433d-a862-80f18ec7bfdd",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hourly-values/:hourlyValueId/hard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values",
								":hourlyValueId",
								"hard"
							],
							"variable": [
								{
									"key": "hourlyValueId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hourly Value by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Hourly Value retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.hourly_value_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "d29b1c9b-a0be-405b-94de-be2da889eec7"
							}
						}
					],
					"id": "37cf9a0a-b1f8-4dfb-b0fd-2843f732db44",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hourly-values/:hourlyValueId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values",
								":hourlyValueId"
							],
							"variable": [
								{
									"key": "hourlyValueId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Hourly Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Hourly Values retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "95d43065-d7a5-4923-ad6d-acefca9a6b22"
							}
						}
					],
					"id": "6cebf82c-dee7-4832-9cc9-406b2a8fe2b7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hourly-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hourly Values by Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Hourly Values by Device retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "fa5827fc-b2ce-44a8-b11b-b8a20f6b02fd"
							}
						}
					],
					"id": "0ee6524d-9ecd-4b24-9a8a-aaa551962c5f",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hourly-values/device/:device_serial?start_time=2025-05-20T00:00:00Z&end_time=2025-05-21T00:00:00Z&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values",
								"device",
								":device_serial"
							],
							"query": [
								{
									"key": "start_time",
									"value": "2025-05-20T00:00:00Z"
								},
								{
									"key": "end_time",
									"value": "2025-05-21T00:00:00Z"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							],
							"variable": [
								{
									"key": "device_serial",
									"value": "ABC123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hourly Values by Space",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Hourly Values by Space retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c90a9784-f27c-45db-a512-2226dac5a7c3"
							}
						}
					],
					"id": "6d1b357f-7705-4035-920d-5527ea579ffa",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hourly-values/space/:spaceId?start_time=2025-05-20T00:00:00Z&end_time=2025-05-21T00:00:00Z&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values",
								"space",
								":spaceId"
							],
							"query": [
								{
									"key": "start_time",
									"value": "2025-05-20T00:00:00Z"
								},
								{
									"key": "end_time",
									"value": "2025-05-21T00:00:00Z"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							],
							"variable": [
								{
									"key": "spaceId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hourly Value Statistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Hourly Value Statistics retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.stats).to.be.an('array');",
									"  pm.expect(response.chart).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c1ed887b-405a-4902-add4-bb5179a82df8"
							}
						}
					],
					"id": "ffeddace-e795-40c7-9974-27cf49bbbb37",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hourly-values/statistics/:device_serial?type=daily&start_time=2025-05-20T00:00:00Z&end_time=2025-05-21T00:00:00Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hourly-values",
								"statistics",
								":device_serial"
							],
							"query": [
								{
									"key": "type",
									"value": "daily"
								},
								{
									"key": "start_time",
									"value": "2025-05-20T00:00:00Z"
								},
								{
									"key": "end_time",
									"value": "2025-05-21T00:00:00Z"
								}
							],
							"variable": [
								{
									"key": "device_serial",
									"value": "ABC123"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "a1059c04-d631-4f69-86a6-6833f499fa6c"
		},
		{
			"name": "Component",
			"item": [
				{
					"name": "Create Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Component created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "aa12b369-0b27-4b9d-acfe-9e4003eb08a8"
							}
						}
					],
					"id": "0d8b800c-dc3b-45f9-add1-026223904d11",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test Component\",\n  \"supplier\": \"Supplier ABC\",\n  \"quantity_in_stock\": 100,\n  \"unit_cost\": 10.50\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/component",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"component"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Component updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "56fc3c20-477c-466c-bc64-aafc9793df91"
							}
						}
					],
					"id": "152ff8c6-e249-471f-b687-b868a99cb355",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Component\",\n  \"supplier\": \"New Supplier\",\n  \"quantity_in_stock\": 150,\n  \"unit_cost\": 12.75\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/component/:componentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"component",
								":componentId"
							],
							"variable": [
								{
									"key": "componentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Component deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6d71566e-e745-4392-8c0a-4d66523bc571"
							}
						}
					],
					"id": "c11f2dc9-6bd8-48cc-8995-a62bb61196ad",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/component/:componentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"component",
								":componentId"
							],
							"variable": [
								{
									"key": "componentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Component by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Component retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "160ea7c2-0902-4ee1-8ccb-9098587bcc97"
							}
						}
					],
					"id": "ab634617-d8af-444c-8941-c65b0650148d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/component/:componentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"component",
								":componentId"
							],
							"variable": [
								{
									"key": "componentId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Components",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Components retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "5be5b436-7a35-4374-89e0-10b4425af29c"
							}
						}
					],
					"id": "e9aa90d9-3ba2-4f9b-a953-8150a983300d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/component",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"component"
							]
						}
					},
					"response": []
				}
			],
			"id": "b9d72e31-e948-42a2-95df-e0d1d6da4324"
		},
		{
			"name": "Template Components",
			"item": [
				{
					"name": "Create Template Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Template component created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.template_component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8a4ab11c-19dd-4c3d-959e-7007b0125ea1"
							}
						}
					],
					"id": "06abad87-0054-4e68-8042-676cae91abd1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"template_id\": 1,\n  \"component_id\": 1,\n  \"quantity_required\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/template-components",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"template-components"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Template Components",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Template components retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "9bbc56c8-dd8c-4f6e-84bd-e443d18f4aa7"
							}
						}
					],
					"id": "e6431c5b-ad11-4574-834d-ae18a24ab700",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/template-components",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"template-components"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Template Component by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Template component retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.template_component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8569f510-b7e5-4f55-b8a6-a76db065ccb9"
							}
						}
					],
					"id": "d385723a-1f46-4d2f-a81a-ec15e015e977",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/template-components/:templateComponentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"template-components",
								":templateComponentId"
							],
							"variable": [
								{
									"key": "templateComponentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Template Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Template component updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.template_component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6e0833fb-87a8-462a-aea9-a750b1390537"
							}
						}
					],
					"id": "316e5cf2-5216-4746-aaa7-2e9dd871ee24",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"template_id\": 1,\n  \"component_id\": 1,\n  \"quantity_required\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/template-components/:templateComponentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"template-components",
								":templateComponentId"
							],
							"variable": [
								{
									"key": "templateComponentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Template Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Template component deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a0eaedef-235c-473a-bd56-91ed091345f8"
							}
						}
					],
					"id": "3d29f498-7453-4d90-b267-ef42404fa0f7",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/template-components/:templateComponentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"template-components",
								":templateComponentId"
							],
							"variable": [
								{
									"key": "templateComponentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "4cbe680a-0cf2-4fe3-97b5-adc3ad4ecba3"
		},
		{
			"name": "Device Templates",
			"item": [
				{
					"name": "Create Device Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device template created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.template_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "cf6c2ab9-c0e3-439b-8a76-c1a0651e170f"
							}
						}
					],
					"id": "7c4c15f3-878b-4a56-9158-44646532c712",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Smart Light v1\",\n  \"description\": \"Standard smart light template\",\n  \"version\": \"1.0.0\",\n  \"category\": \"lighting\",\n  \"specifications\": {\n    \"power\": \"10W\",\n    \"voltage\": \"220V\",\n    \"connectivity\": \"WiFi\",\n    \"protocol\": \"MQTT\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/device-templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device-templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Template by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device template retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.template_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8616e144-6e09-43c3-a403-c5fed9ae897a"
							}
						}
					],
					"id": "e75f8a33-616a-41ce-a7d8-61b6240fed8e",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device-templates/:templateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device-templates",
								":templateId"
							],
							"variable": [
								{
									"key": "templateId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Device Templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device templates retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "0f581971-6092-4b05-98ec-aa6de09ac940"
							}
						}
					],
					"id": "ac42698e-badc-4da9-ae2c-fd19ab50a6e1",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device-templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device-templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Device Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Device template updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.template_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "3e0ece43-c1d7-4fad-bac0-7ce512f4b85d"
							}
						}
					],
					"id": "c532aee0-849e-4d81-81c9-457e48158b03",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Smart Light v1.1\",\n  \"description\": \"Updated smart light template\",\n  \"version\": \"1.1.0\",\n  \"category\": \"lighting\",\n  \"specifications\": {\n    \"power\": \"12W\",\n    \"voltage\": \"220V\",\n    \"connectivity\": \"WiFi+BLE\",\n    \"protocol\": \"MQTT\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/device-templates/:templateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device-templates",
								":templateId"
							],
							"variable": [
								{
									"key": "templateId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Device template deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "ed006e0a-1310-4088-93bd-80cc60e52a17"
							}
						}
					],
					"id": "6a8fcb6d-727c-40f6-90ef-464e4387f9f7",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/device-templates/:templateId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"device-templates",
								":templateId"
							],
							"variable": [
								{
									"key": "templateId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "d6acec43-5142-46ed-b82d-57791d88f0d3"
		},
		{
			"name": "Production Batches",
			"item": [
				{
					"name": "Create Production Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production batch created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.production_batch_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "4da1b471-50a5-4725-91bf-9b3061b7530c"
							}
						}
					],
					"id": "6ba87bc2-712a-4980-9a8d-a5ecd3c37663",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"template_id\": 1,\n  \"quantity\": 100,\n  \"start_date\": \"2025-05-21\",\n  \"target_completion_date\": \"2025-06-21\",\n  \"priority\": \"high\",\n  \"notes\": \"Regular production batch for smart lights\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/production-batches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Production Batch by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production batch retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.production_batch_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "10f277e3-e5bb-4016-8f76-7bf1ed1228ad"
							}
						}
					],
					"id": "70ca2494-52c5-4b65-b300-ff6ac9642d51",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-batches/:batchId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-batches",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Production Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production batches retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "e7d29944-e3b1-44f7-a4e7-14fe418897ec"
							}
						}
					],
					"id": "8ac104a8-5e60-4251-81d5-74475ce2fc64",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-batches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Production Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production batch updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.production_batch_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "6ff9d5b8-2de8-45fa-ba13-c97eae6b2012"
							}
						}
					],
					"id": "ca91f2a4-437a-4021-8bfd-4c8f28db011a",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": 120,\n  \"target_completion_date\": \"2025-06-30\",\n  \"priority\": \"urgent\",\n  \"notes\": \"Updated: Increased quantity and priority\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/production-batches/:batchId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-batches",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Production Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Production batch deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "07cf9307-0a3a-43c4-b9f1-17a171dac002"
							}
						}
					],
					"id": "d08650ff-7b37-4882-8073-985b9cad44d5",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-batches/:batchId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-batches",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "95ff0b4c-810e-4b42-a54c-df9fb8c42f43"
		},
		{
			"name": "Production Components",
			"item": [
				{
					"name": "Create Production Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production component created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.production_component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "cbb5a8b8-1a80-4bea-bcf9-49b4ff01e6d4"
							}
						}
					],
					"id": "667cfde0-5a9b-42c5-bd61-002d29864119",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"production_id\": 1,\n  \"component_id\": 1,\n  \"quantity_used\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/production-components",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-components"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Production Component by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production component retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.production_component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "27ca04c9-6b68-4638-a098-cdd54baef354"
							}
						}
					],
					"id": "0b5e88c7-46c1-46fe-8ae0-73ff6751a126",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-components/:productionComponentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-components",
								":productionComponentId"
							],
							"variable": [
								{
									"key": "productionComponentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Production Components by Production ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production components retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "b4eb67ab-9d66-49ec-beeb-c5583722d5cd"
							}
						}
					],
					"id": "da5a191f-930a-4eae-aaf0-f30f2ff39637",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-components/production/:productionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-components",
								"production",
								":productionId"
							],
							"variable": [
								{
									"key": "productionId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Production Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production component updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.production_component_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "4c728942-9d99-4bbe-96c9-5a8b0147d0ff"
							}
						}
					],
					"id": "ca62128b-c83d-46dd-b323-ceba191d690b",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"production_id\": 1,\n  \"component_id\": 1,\n  \"quantity_used\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/production-components/:productionComponentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-components",
								":productionComponentId"
							],
							"variable": [
								{
									"key": "productionComponentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Production Component",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Production component deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "1caa3712-2119-4c72-ac6a-7f914b8a354d"
							}
						}
					],
					"id": "a1fb438d-4731-40ac-a2d3-e9be7ca8c96e",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-components/:productionComponentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-components",
								":productionComponentId"
							],
							"variable": [
								{
									"key": "productionComponentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "3bcb4f68-1c06-4b11-a3fe-5d6882d747ae"
		},
		{
			"name": "Production Tracking",
			"item": [
				{
					"name": "Create Production Tracking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production tracking created successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"  pm.expect(response.production_tracking_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "badd2c5a-f30d-4eab-9032-55c024d02264"
							}
						}
					],
					"id": "a6214fbd-13e5-4408-ab40-05908efa9093",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"production_batch_id\": \"BATCH123\",\n  \"device_serial\": \"DEV001\",\n  \"stage\": \"assembly\",\n  \"status\": \"in_progress\",\n  \"cost\": 150.50\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/production-tracking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-tracking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Production Tracking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production tracking retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.production_tracking_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "c7f73b3f-0ef8-4f32-890a-487d52bffcb1"
							}
						}
					],
					"id": "6bdf24c7-1045-4fa4-a828-57124cdaf005",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-tracking/:productionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-tracking",
								":productionId"
							],
							"variable": [
								{
									"key": "productionId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Production Tracking by Batch ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production tracking records retrieved successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response).to.be.an('array');",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "90fe181b-e7c5-40a2-9e53-26000c373aa0"
							}
						}
					],
					"id": "cfa74c51-210c-4ab1-9618-cb99fea049a2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-tracking/batch/:batchId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-tracking",
								"batch",
								":batchId"
							],
							"variable": [
								{
									"key": "batchId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Production Tracking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"pm.test('Production tracking updated successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"  pm.expect(response.production_tracking_id).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "8c7b2c77-4920-4bcb-a2fb-c85704b5ca5e"
							}
						}
					],
					"id": "36016ee6-cc13-4303-aef3-118b9d158f5a",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"stage\": \"qc\",\n  \"status\": \"completed\",\n  \"cost\": 180.75\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/production-tracking/:productionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-tracking",
								":productionId"
							],
							"variable": [
								{
									"key": "productionId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Production Tracking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Production tracking deleted successfully', () => {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "ed176e9c-8777-4014-825b-f1b2c21a3927"
							}
						}
					],
					"id": "8023c2a5-05d1-48fe-b7a9-b12d8999d835",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/production-tracking/:productionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"production-tracking",
								":productionId"
							],
							"variable": [
								{
									"key": "productionId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "5301198c-c5ba-4600-aa81-27a76b2476a4"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				],
				"id": "47706b9d-f510-45ac-a603-232c8d8b0afb"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				],
				"id": "898b16d9-475e-4270-87ca-e6aa99c781a8"
			}
		}
	],
	"variable": [
		{
			"id": "6d84fecd-a444-4b2c-8604-a88b0ff83ad3",
			"key": "baseUrl",
			"value": "http://localhost:3000/api",
			"type": "string"
		},
		{
			"id": "c1566469-ea00-4079-8db2-b783002acc51",
			"key": "userAccessToken",
			"value": "",
			"type": "string"
		},
		{
			"id": "123132b2-66c8-4efe-9b89-130180f9faa4",
			"key": "userRefreshToken",
			"value": "",
			"type": "string"
		},
		{
			"id": "586237b2-54fa-475e-82df-1239fec6d21b",
			"key": "employeeAccessToken",
			"value": "",
			"type": "string"
		},
		{
			"id": "034549c1-89ae-4701-8bae-fdd00b23d75b",
			"key": "employeeRefreshToken",
			"value": "",
			"type": "string"
		}
	]
}