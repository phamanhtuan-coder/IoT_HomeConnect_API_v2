[
  {
    "name": "Auth",
    "item": [
      {
        "name": "Login User",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.environment.set('userAccessToken', response.accessToken);",
                "pm.environment.set('userRefreshToken', response.refreshToken || pm.environment.get('userRefreshToken'));",
                "pm.environment.set('deviceUuid', response.deviceUuid);",
                "pm.test('User login successful', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.accessToken).to.exist;",
                "  pm.expect(response.deviceUuid).to.be.a('string');",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"rememberMe\": true,\n  \"deviceName\": \"MyDevice\",\n  \"deviceId\": \"device123\",\n  \"deviceUuid\": \"\", // Có thể rỗng lần đầu, hoặc điền UUID từ lần trước\n  \"fcmToken\": \"optionalToken\",\n  \"ipAddress\": \"192.168.1.1\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/login",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "login"]
          }
        },
        "response": []
      },
      {
        "name": "Login Employee",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "console.log('Login Employee Response:', response);",
                "if (response.accessToken) {",
                "    pm.environment.set('employeeAccessToken', response.accessToken);",
                "    console.log('employeeAccessToken set to:', response.accessToken);",
                "    const savedToken = pm.environment.get('employeeAccessToken');",
                "    console.log('Verified employeeAccessToken:', savedToken);",
                "    if (!savedToken) {",
                "        console.log('WARNING: employeeAccessToken not persisting in environment');",
                "    }",
                "} else {",
                "    console.log('No accessToken found in response');",
                "}",
                "if (response.refreshToken) {",
                "    pm.environment.set('employeeRefreshToken', response.refreshToken);",
                "    console.log('employeeRefreshToken set to:', response.refreshToken);",
                "} else {",
                "    console.log('No refreshToken found, keeping existing:', pm.environment.get('employeeRefreshToken'));",
                "}",
                "pm.test('Employee login successful', () => {",
                "    pm.expect(pm.response.code).to.equal(200);",
                "    pm.expect(response).to.have.property('accessToken').that.is.a('string').and.not.empty;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"newadmin@example.com\",\n  \"password\": \"admin123\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/employee/login",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "employee", "login"]
          }
        },
        "response": []
      },
      {
        "name": "Register User",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.environment.set('userAccessToken', response.token);",
                "pm.test('User registration successful', () => {",
                "  pm.expect(pm.response.code).to.equal(201);",
                "  pm.expect(response.token).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"newpassword123\",\n  \"name\": \"New User\",\n  \"phone\": \"1234567890\",\n  \"address\": \"123 User St\",\n  \"dateOfBirth\": \"1990-01-01\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/register",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "register"]
          }
        },
        "response": []
      },
      {
        "name": "Register Employee",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Employee registration successful', () => {",
                "  pm.expect(pm.response.code).to.equal(201);",
                "  pm.expect(response.token).to.exist;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"New Admin\",\n  \"email\": \"newadmin@example.com\",\n  \"password\": \"admin123\",\n  \"role\": \"admin\",\n  \"phone\": \"0123456789\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/employee/register",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "employee", "register"]
          }
        },
        "response": []
      },
      {
        "name": "Refresh User Token",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.environment.set('userAccessToken', response.accessToken);",
                "pm.test('User token refreshed', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.accessToken).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"refreshToken\": \"{{userRefreshToken}}\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/refresh",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "refresh"]
          }
        },
        "response": []
      },
      {
        "name": "Refresh Employee Token",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.environment.set('employeeAccessToken', response.accessToken);",
                "pm.test('Employee token refreshed', () => {",
                "    pm.expect(pm.response.code).to.equal(200);",
                "    pm.expect(response.accessToken).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"refreshToken\": \"{{employeeRefreshToken}}\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/employee/refresh",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "employee", "refresh"]
          }
        },
        "response": []
      },
      {
        "name": "Logout User (Single Device)",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"userDeviceId\": 1\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/logout",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "logout"]
          }
        },
        "response": []
      },
      {
        "name": "Logout Employee (Single Device)",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/employee/logout",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "employee", "logout"]
          }
        },
        "response": []
      },
      {
        "name": "Logout Multiple Devices",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"userDeviceIds\": [1, 2]\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/logout/multiple",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "logout", "multiple"]
          }
        },
        "response": []
      },
      {
        "name": "Logout All Devices",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/auth/logout/all",
            "host": ["{{baseUrl}}"],
            "path": ["auth", "logout", "all"]
          }
        },
        "response": []
      }
    ]
  }
]