[
  {
    "name": "Camera Management",
    "item": [
      {
        "name": "Get Camera Info",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Camera info retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.camera).to.exist;",
                "  pm.expect(response.camera.serialNumber).to.exist;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/info",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "info"]
          }
        },
        "response": []
      },
      {
        "name": "Generate Stream Token",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Stream token generated successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.streamUrl).to.exist;",
                "  pm.expect(response.token).to.exist;",
                "});",
                "",
                "// Save token for other requests",
                "if (response.token) {",
                "  pm.collectionVariables.set('streamToken', response.token);",
                "}"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/stream/token",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "stream", "token"]
          }
        },
        "response": []
      },
      {
        "name": "Get Stream URL",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Stream URL accessible', () => {",
                "  pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/camera/stream/{{cameraSerial}}?token={{streamToken}}",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "stream", "{{cameraSerial}}"],
            "query": [
              {
                "key": "token",
                "value": "{{streamToken}}"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Start RTMP Stream",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('RTMP stream started successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/stream/start",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "stream", "start"]
          }
        },
        "response": []
      },
      {
        "name": "Send Camera Command",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Camera command sent successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"action\": \"startStream\",\n  \"params\": {\n    \"enabled\": true,\n    \"quality\": 10,\n    \"resolution\": \"VGA\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/command",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "command"]
          }
        },
        "response": []
      },
      {
        "name": "Capture Photo",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Photo captured successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"action\": \"capturePhoto\",\n  \"params\": {\n    \"saveToSD\": true,\n    \"quality\": 10,\n    \"filename\": \"photo_{{$timestamp}}.jpg\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/capture",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "capture"]
          }
        },
        "response": []
      },
      {
        "name": "Enable Face Detection",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Face detection toggled successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"enabled\": true\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/face-detection",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "face-detection"]
          }
        },
        "response": []
      },
      {
        "name": "Get Camera Capabilities",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Camera capabilities retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "  pm.expect(response.capabilities).to.exist;",
                "  pm.expect(response.capabilities.base).to.exist;",
                "  pm.expect(response.capabilities.merged_capabilities).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/capabilities",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "capabilities"]
          }
        },
        "response": []
      },
      {
        "name": "Update Camera Status",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Camera status updated successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "PUT",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"status\": \"online\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/status",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "status"]
          }
        },
        "response": []
      },
      {
        "name": "Stop Stream",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Stream stopped successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"action\": \"stopStream\",\n  \"params\": {}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/command",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "command"]
          }
        },
        "response": []
      },
      {
        "name": "Set Camera Resolution",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Camera resolution set successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"action\": \"setResolution\",\n  \"params\": {\n    \"resolution\": \"SVGA\",\n    \"quality\": 12\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/command",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "command"]
          }
        },
        "response": []
      },
      {
        "name": "Enable Motion Detection",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Motion detection toggled successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.success).to.be.true;",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{userAccessToken}}",
              "type": "text"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"action\": \"setMotionDetection\",\n  \"params\": {\n    \"enabled\": true,\n    \"sensitivity\": 50\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/camera/{{cameraSerial}}/command",
            "host": ["{{baseUrl}}"],
            "path": ["camera", "{{cameraSerial}}", "command"]
          }
        },
        "response": []
      }
    ]
  }
]
