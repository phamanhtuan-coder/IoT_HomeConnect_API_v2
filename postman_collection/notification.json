[
  {
    "name": "Notification",
    "item": [
      {
        "name": "Create Notification",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Notification created successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(201);",
                "  pm.expect(response.id).to.exist;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"account_id\": \"user123\",\n  \"role_id\": 1,\n  \"text\": \"System maintenance scheduled\",\n  \"type\": \"SYSTEM\",\n  \"is_read\": false\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/notifications",
            "host": ["{{baseUrl}}"],
            "path": ["notifications"]
          }
        },
        "response": []
      },
      {
        "name": "Update Notification",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Notification updated successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.id).to.exist;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "PUT",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"is_read\": true\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/notifications/:id",
            "host": ["{{baseUrl}}"],
            "path": ["notifications", ":id"],
            "variable": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Delete Notification",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test('Notification deleted successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(204);",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "DELETE",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/notifications/:id",
            "host": ["{{baseUrl}}"],
            "path": ["notifications", ":id"],
            "variable": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get Notification by ID",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Notification retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.id).to.exist;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/notifications/:id",
            "host": ["{{baseUrl}}"],
            "path": ["notifications", ":id"],
            "variable": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get Notifications by User",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Notifications retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/notifications/user",
            "host": ["{{baseUrl}}"],
            "path": ["notifications", "user"]
          }
        },
        "response": []
      },
      {
        "name": "Get All Notifications",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('Notifications retrieved successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response).to.be.an('array');",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{employeeAccessToken}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{baseUrl}}/notifications?account_id=user123&type=SYSTEM&is_read=false&page=1&limit=10",
            "host": ["{{baseUrl}}"],
            "path": ["notifications"],
            "query": [
              {
                "key": "account_id",
                "value": "user123"
              },
              {
                "key": "type",
                "value": "SYSTEM"
              },
              {
                "key": "is_read",
                "value": "false"
              },
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Send OTP",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('OTP sent successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.message).to.equal('OTP sent successfully');",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"user@example.com\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/notifications/otp",
            "host": ["{{baseUrl}}"],
            "path": ["notifications", "otp"]
          }
        },
        "response": []
      },
      {
        "name": "Generate OTP",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('OTP generated successfully', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.message).to.equal('OTP generated and sent successfully');",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"user@example.com\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/notifications/otp/generate",
            "host": ["{{baseUrl}}"],
            "path": ["notifications", "otp", "generate"]
          }
        },
        "response": []
      },
      {
        "name": "Verify OTP",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "const response = pm.response.json();",
                "pm.test('OTP verification completed', () => {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "  pm.expect(response.message).to.be.oneOf(['OTP verified successfully', 'OTP verification failed']);",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"email\": \"user@example.com\",\n  \"otp\": \"123456\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{baseUrl}}/notifications/otp/verify",
            "host": ["{{baseUrl}}"],
            "path": ["notifications", "otp", "verify"]
          }
        },
        "response": []
      }
    ]
  }
]