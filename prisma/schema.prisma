generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("AIVEN_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model account {
  account_id                                                String               @id @db.VarChar(32)
  customer_id                                               String?              @db.VarChar(32)
  employee_id                                               String?              @db.VarChar(32)
  role_id                                                   Int?
  username                                                  String               @db.VarChar(255)
  password                                                  String?              @db.VarChar(255)
  verification_code                                         String?              @db.VarChar(6)
  verification_expiry                                       DateTime?            @db.DateTime(0)
  report                                                    Int?                 @db.TinyInt
  is_new                                                    Boolean?
  status                                                    Int?                 @db.TinyInt
  created_at                                                DateTime?            @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at                                                DateTime?            @default(dbgenerated("(now())")) @db.DateTime(0)
  deleted_at                                                DateTime?            @db.DateTime(0)
  is_locked                                                 Boolean?             @default(false)
  locked_at                                                 DateTime?            @db.DateTime(0)
  role                                                      role?                @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "account_ibfk_1")
  employee                                                  employee?            @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "account_ibfk_2")
  customer                                                  customer?            @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "account_ibfk_3")
  device_templates                                          device_templates[]
  devices                                                   devices[]
  notification                                              notification[]
  ownership_history_ownership_history_from_user_idToaccount ownership_history[]  @relation("ownership_history_from_user_idToaccount")
  ownership_history_ownership_history_to_user_idToaccount   ownership_history[]  @relation("ownership_history_to_user_idToaccount")
  planning                                                  planning[]           @relation("account_planning_created_byToaccount")
  shared_permissions                                        shared_permissions[]
  sync_tracking                                             sync_tracking[]
  tickets_tickets_user_idToaccount                          tickets[]            @relation("tickets_user_idToaccount")
  tickets_tickets_assigned_toToaccount                      tickets[]            @relation("tickets_assigned_toToaccount")
  user_devices                                              user_devices[]
  user_groups                                               user_groups[]

  @@index([customer_id], map: "customer_id")
  @@index([employee_id], map: "employee_id")
  @@index([role_id], map: "role_id")
}

model address_book {
  id            Int       @id @default(autoincrement())
  customer_id   String?   @db.VarChar(32)
  receiver_name String?   @db.VarChar(255)
  phone         String?   @db.VarChar(10)
  district      String?   @db.VarChar(500)
  city          String?   @db.VarChar(500)
  ward          String?   @db.VarChar(500)
  street        String?   @db.VarChar(500)
  detail        String?   @db.VarChar(500)
  is_default    Boolean?
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @updatedAt @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)
  customer      customer? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "address_book_ibfk_1")

  @@index([customer_id], map: "customer_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model alert_types {
  alert_type_id   Int       @id @default(autoincrement())
  alert_type_name String    @db.VarChar(500)
  priority        Int?      @default(1)
  is_deleted      Boolean?  @default(false)
  created_at      DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at      DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  alerts          alerts[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model alerts {
  alert_id      Int         @id @default(autoincrement())
  device_serial String?     @db.VarChar(50)
  space_id      Int?
  message       String?     @db.Text
  timestamp     DateTime?   @default(dbgenerated("(now())")) @db.DateTime(0)
  status        String?     @default("unread") @db.VarChar(20)
  alert_type_id Int
  created_at    DateTime?   @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at    DateTime?   @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted    Boolean?    @default(false)
  devices       devices?    @relation(fields: [device_serial], references: [serial_number], onDelete: NoAction, onUpdate: NoAction, map: "alerts_ibfk_1")
  spaces        spaces?     @relation(fields: [space_id], references: [space_id], onDelete: NoAction, onUpdate: NoAction, map: "alerts_ibfk_2")
  alert_types   alert_types @relation(fields: [alert_type_id], references: [alert_type_id], onDelete: NoAction, onUpdate: NoAction, map: "alerts_ibfk_3")

  @@index([alert_type_id], map: "alert_type_id")
  @@index([device_serial], map: "device_serial")
  @@index([space_id], map: "space_id")
}

model attribute {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(500)
  datatype           String?              @db.VarChar(500)
  required           Boolean?
  group_attribute_id Int?
  is_hide            Boolean?
  created_at         DateTime?            @default(now()) @db.Timestamp(0)
  updated_at         DateTime?            @updatedAt @db.Timestamp(0)
  deleted_at         DateTime?            @db.Timestamp(0)
  attribute_group    attribute_group?     @relation(fields: [group_attribute_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "attribute_ibfk_1")
  attribute_category attribute_category[]
  attribute_product  attribute_product[]

  @@index([group_attribute_id], map: "group_attribute_id")
}

model attribute_category {
  id           Int         @id @default(autoincrement()) @db.UnsignedInt
  attribute_id Int?
  category_id  Int?
  created_at   DateTime?   @db.Timestamp(0)
  updated_at   DateTime?   @db.Timestamp(0)
  deleted_at   DateTime?   @db.Timestamp(0)
  categories   categories? @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "attribute_category_ibfk_1")
  attribute    attribute?  @relation(fields: [attribute_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "attribute_category_ibfk_2")

  @@index([attribute_id], map: "attribute_id")
  @@index([category_id], map: "category_id")
}

model attribute_group {
  id         Int         @id @default(autoincrement())
  name       String?     @db.VarChar(500)
  created_at DateTime?   @default(now()) @db.Timestamp(0)
  updated_at DateTime?   @updatedAt @db.Timestamp(0)
  deleted_at DateTime?   @db.Timestamp(0)
  attribute  attribute[]
}

model attribute_product {
  product_id   String
  attribute_id Int
  is_hide      Boolean?
  value        String?   @db.VarChar(500)
  created_at   DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @updatedAt @db.Timestamp(0)
  deleted_at   DateTime? @db.Timestamp(0)
  product      product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "attribute_product_ibfk_1")
  attribute    attribute @relation(fields: [attribute_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "attribute_product_ibfk_2")

  @@id([product_id, attribute_id])
  @@index([attribute_id], map: "attribute_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model batch_product_detail {
  id                  Int            @id @default(autoincrement())
  exp_batch_id        String?        @db.VarChar(50)
  imp_batch_id        String         @db.VarChar(50)
  batch_production_id String         @db.VarChar(50)
  serial_number       String?        @db.VarChar(50)
  created_at          DateTime?      @default(now()) @db.Timestamp(0)
  updated_at          DateTime?      @updatedAt @db.Timestamp(0)
  deleted_at          DateTime?      @db.Timestamp(0)
  detail_export       detail_export? @relation(fields: [exp_batch_id], references: [batch_code], onDelete: NoAction, onUpdate: NoAction, map: "batch_product_detail_ibfk_2")

  @@index([exp_batch_id], map: "exp_batch_id")
  @@index([imp_batch_id], map: "imp_batch_id")
}

model blog {
  id             Int         @id @default(autoincrement())
  category_id    Int?
  product_id     String?
  title          String?     @db.VarChar(500)
  author         String?     @db.VarChar(32)
  content        String?     @db.VarChar(500)
  content_normal String?     @db.Text
  image          String?     @db.MediumText
  score          Int?
  is_hide        Boolean?
  created_at     DateTime?   @default(now()) @db.Timestamp(0)
  updated_at     DateTime?   @updatedAt @db.Timestamp(0)
  deleted_at     DateTime?   @db.Timestamp(0)
  employee       employee?   @relation("BlogToEmployee", fields: [author], references: [id], onDelete: NoAction, onUpdate: NoAction)
  categories     categories? @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "blog_ibfk_1")
  product        product?    @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "blog_ibfk_2")

  @@index([category_id], map: "category_id")
  @@index([product_id], map: "product_id")
  @@index([author], map: "author")
}

model cart {
  id          Int       @id @default(autoincrement())
  customer_id String    @db.VarChar(32)
  product_id  String?
  quantity    Int?
  selected    Boolean   @db.Bit(1)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @updatedAt @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  customer    customer  @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_ibfk_1")
  product     product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_ibfk_2")

  @@index([customer_id], map: "customer_id")
  @@index([product_id], map: "product_id")
}

model categories {
  category_id        Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(500)
  key                String?              @db.VarChar(50)
  slug               String?              @db.VarChar(500)
  parent_id          Int?
  image              String?              @db.MediumText
  description        String?              @db.Text
  is_hide            Boolean?             @db.Bit(1)
  created_at         DateTime?            @default(now()) @db.Timestamp(0)
  updated_at         DateTime?            @updatedAt @db.Timestamp(0)
  deleted_at         DateTime?            @db.Timestamp(0)
  attribute_category attribute_category[]
  blog               blog[]
  categories         categories?          @relation("categoriesTocategories", fields: [parent_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "categories_ibfk_1_v2")
  other_categories   categories[]         @relation("categoriesTocategories")
  device_templates   device_templates[]
  product            product[]

  @@index([parent_id], map: "parent_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model components {
  component_id        String                @id @db.VarChar(32)
  name                String                @db.VarChar(100)
  supplier            String?               @db.VarChar(100)
  unit_cost           Decimal?              @db.Decimal(10, 2)
  created_at          DateTime?             @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at          DateTime?             @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted          Boolean?              @default(false)
  status              Boolean?              @default(false)
  template_components template_components[]
}

model contact {
  id         Int       @id @default(autoincrement())
  fullname   String?   @db.VarChar(500)
  title      String?   @db.VarChar(500)
  content    String?   @db.Text
  email      String?   @db.VarChar(100)
  status     Int?      @default(1) @db.TinyInt
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model customer {
  id             String           @id @db.VarChar(32)
  surname        String?          @db.VarChar(500)
  lastname       String?          @db.VarChar(500)
  image          String?          @db.MediumText
  phone          String?          @db.VarChar(12)
  email          String?          @unique(map: "email") @db.VarChar(100)
  email_verified Boolean?         @default(false)
  birthdate      DateTime?        @db.Date
  gender         Boolean?
  created_at     DateTime?        @default(now()) @db.Timestamp(0)
  updated_at     DateTime?        @updatedAt @db.Timestamp(0)
  deleted_at     DateTime?        @db.Timestamp(0)
  account        account[]
  address_book   address_book[]
  cart           cart[]
  liked          liked[]
  order          order[]
  payment_info   payment_info[]
  review_product review_product[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model detail_export {
  batch_code           String                 @id @db.VarChar(50)
  export_id            Int
  order_id             String?                @db.VarChar(50)
  product_id           String
  quantity             Int?
  note                 String?                @db.VarChar(500)
  created_at           DateTime?              @default(now()) @db.Timestamp(0)
  updated_at           DateTime?              @updatedAt @db.Timestamp(0)
  deleted_at           DateTime?              @db.Timestamp(0)
  batch_product_detail batch_product_detail[]
  export_warehouse     export_warehouse       @relation(fields: [export_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "detail_export_ibfk_1")
  order                order?                 @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "detail_export_ibfk_2")
  product              product                @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "detail_export_ibfk_3")

  @@index([order_id], map: "detail_export_ibfk_2")
  @@index([export_id], map: "export_id")
  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model detail_import {
  batch_code       String           @id @db.VarChar(50)
  import_id        String
  product_id       String
  quantity         Int?
  import_price     Float?
  created_at       DateTime?        @default(now()) @db.Timestamp(0)
  updated_at       DateTime?        @updatedAt @db.Timestamp(0)
  deleted_at       DateTime?        @db.Timestamp(0)
  import_warehouse import_warehouse @relation(fields: [import_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "detail_import_ibfk_1")
  product          product          @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "detail_import_ibfk_2")

  @@index([import_id], map: "import_id")
  @@index([product_id], map: "product_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model device_templates {
  template_id          String                @id @db.VarChar(32)
  device_type_id       Int?
  name                 String                @db.VarChar(100)
  created_by           String?               @db.VarChar(32)
  created_at           DateTime?             @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at           DateTime?             @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted           Boolean?              @default(false)
  device_template_note String?               @db.VarChar(500)
  status               String?               @default("pending") @db.VarChar(20)
  production_cost      Float?                @default(0)
  base_capabilities    Json?
  categories           categories?           @relation(fields: [device_type_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "device_templates_ibfk_1")
  account              account?              @relation(fields: [created_by], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "device_templates_ibfk_2")
  devices              devices[]
  firmware             firmware[]
  production_batches   production_batches[]
  template_components  template_components[]

  @@index([created_by], map: "created_by")
  @@index([device_type_id], map: "device_type_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model devices {
  device_id               String                    @db.VarChar(32)
  serial_number           String                    @unique(map: "serial_number") @db.VarChar(50)
  template_id             String                    @db.VarChar(32)
  space_id                Int?
  account_id              String?                   @db.VarChar(32)
  group_id                Int?
  hub_id                  String?                   @db.VarChar(50)
  firmware_id             String?                   @db.VarChar(32)
  name                    String                    @db.VarChar(100)
  power_status            Boolean?                  @default(false)
  attribute               Json?
  wifi_ssid               String?                   @db.VarChar(50)
  wifi_password           String?                   @db.VarChar(50)
  current_value           Json?
  link_status             String?                   @default("unlinked") @db.VarChar(20)
  last_reset_at           DateTime?                 @db.DateTime(0)
  lock_status             String?                   @default("unlocked") @db.VarChar(20)
  locked_at               DateTime?                 @db.DateTime(0)
  created_at              DateTime?                 @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at              DateTime?                 @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted              Boolean?                  @default(false)
  production_tracking_id  Int?
  runtime_capabilities    Json?
  alerts                  alerts[]
  device_templates        device_templates          @relation(fields: [template_id], references: [template_id], onDelete: NoAction, onUpdate: NoAction, map: "devices_ibfk_1")
  spaces                  spaces?                   @relation(fields: [space_id], references: [space_id], onDelete: NoAction, onUpdate: NoAction, map: "devices_ibfk_2")
  account                 account?                  @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "devices_ibfk_3")
  groups                  groups?                   @relation(fields: [group_id], references: [group_id], onDelete: NoAction, onUpdate: NoAction, map: "devices_ibfk_4")
  devices                 devices?                  @relation("devicesTodevices", fields: [hub_id], references: [serial_number], onDelete: NoAction, onUpdate: NoAction, map: "devices_ibfk_5")
  other_devices           devices[]                 @relation("devicesTodevices")
  firmware                firmware?                 @relation(fields: [firmware_id], references: [firmware_id], onDelete: NoAction, onUpdate: NoAction, map: "devices_ibfk_6")
  production_tracking     production_tracking?      @relation(fields: [production_tracking_id], references: [production_id], onDelete: NoAction, onUpdate: NoAction, map: "devices_ibfk_7")
  firmware_update_history firmware_update_history[]
  hourly_values           hourly_values[]
  ownership_history       ownership_history[]
  shared_permissions      shared_permissions[]
  tickets                 tickets[]

  @@id([device_id, serial_number])
  @@index([account_id], map: "account_id")
  @@index([firmware_id], map: "firmware_id")
  @@index([group_id], map: "group_id")
  @@index([hub_id], map: "hub_id")
  @@index([space_id], map: "space_id")
  @@index([template_id], map: "template_id")
  @@index([production_tracking_id], map: "production_tracking_id")
}

model employee {
  id                               String             @id @db.VarChar(32)
  surname                          String?            @db.VarChar(500)
  lastname                         String?            @db.VarChar(500)
  image                            String?            @db.MediumText
  email                            String?            @db.VarChar(500)
  birthdate                        DateTime?          @db.Date
  gender                           Boolean?
  phone                            String?            @db.VarChar(12)
  status                           Int?               @db.TinyInt
  created_at                       DateTime?          @default(now()) @db.Timestamp(0)
  updated_at                       DateTime?          @updatedAt @db.Timestamp(0)
  deleted_at                       DateTime?          @db.Timestamp(0)
  warehouse_id                     Int?
  account                          account[]
  blog                             blog[]             @relation("BlogToEmployee")
  warehouse                        warehouse?         @relation(fields: [warehouse_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_employee_warehouse")
  export_warehouse                 export_warehouse[]
  import_warehouse                 import_warehouse[]
  order_order_saler_idToemployee   order[]            @relation("order_saler_idToemployee")
  order_order_shipper_idToemployee order[]            @relation("order_shipper_idToemployee")

  @@index([warehouse_id], map: "FK_employee_warehouse")
}

model export_warehouse {
  id                Int             @id @default(autoincrement())
  export_code       String?         @db.VarChar(12)
  export_number     Int?
  employee_id       String?         @db.VarChar(32)
  export_date       DateTime?       @db.Date
  file_authenticate String?         @db.MediumText
  total_profit      Float?
  note              String?         @db.VarChar(500)
  status            Int             @default(0)
  created_at        DateTime?       @default(now()) @db.Timestamp(0)
  updated_at        DateTime?       @updatedAt @db.Timestamp(0)
  deleted_at        DateTime?       @db.Timestamp(0)
  detail_export     detail_export[]
  employee          employee?       @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "export_warehouse_ibfk_1")

  @@index([employee_id], map: "employee_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model firmware {
  firmware_id             String                    @id @db.VarChar(32)
  version                 String                    @db.VarChar(50)
  file_path               String                    @db.LongText
  template_id             String?                   @db.VarChar(32)
  is_mandatory            Boolean?                  @default(false)
  created_at              DateTime?                 @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at              DateTime?                 @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted              Boolean?                  @default(false)
  note                    String?                   @db.Text
  name                    String                    @db.VarChar(500)
  is_approved             Boolean?                  @default(false)
  logs                    Json?
  tested_at               DateTime?                 @db.DateTime(0)
  devices                 devices[]
  device_templates        device_templates?         @relation(fields: [template_id], references: [template_id], onDelete: NoAction, onUpdate: NoAction, map: "firmware_ibfk_1")
  firmware_update_history firmware_update_history[]
  production_batches      production_batches[]

  @@index([template_id], map: "template_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model firmware_update_history {
  update_id     Int       @id @default(autoincrement())
  device_serial String?   @db.VarChar(50)
  firmware_id   String    @db.VarChar(32)
  updated_at    DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  status        String?   @default("success") @db.VarChar(20)
  created_at    DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted    Boolean?  @default(false)
  devices       devices?  @relation(fields: [device_serial], references: [serial_number], onDelete: NoAction, onUpdate: NoAction, map: "firmware_update_history_ibfk_1")
  firmware      firmware  @relation(fields: [firmware_id], references: [firmware_id], onDelete: NoAction, onUpdate: NoAction, map: "firmware_update_history_ibfk_2")

  @@index([device_serial], map: "device_serial")
  @@index([firmware_id], map: "firmware_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model groups {
  group_id          Int           @id @default(autoincrement())
  created_at        DateTime?     @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at        DateTime?     @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted        Boolean?      @default(false)
  group_name        String        @db.VarChar(255)
  group_description String?       @db.LongText
  icon_color        String?       @db.VarChar(100)
  icon_name         String?       @db.VarChar(100)
  devices           devices[]
  houses            houses[]
  user_groups       user_groups[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model hourly_values {
  hourly_value_id Int       @id @default(autoincrement())
  device_serial   String?   @db.VarChar(50)
  space_id        Int?
  hour_timestamp  DateTime? @db.DateTime(0)
  avg_value       Json?
  sample_count    Int?
  created_at      DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at      DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted      Boolean?  @default(false)
  devices         devices?  @relation(fields: [device_serial], references: [serial_number], onDelete: NoAction, onUpdate: NoAction, map: "hourly_values_ibfk_1")
  spaces          spaces?   @relation(fields: [space_id], references: [space_id], onDelete: NoAction, onUpdate: NoAction, map: "hourly_values_ibfk_2")

  @@index([device_serial], map: "device_serial")
  @@index([space_id], map: "space_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model houses {
  house_id   Int       @id @default(autoincrement())
  group_id   Int?
  address    String?   @db.LongText
  icon_name  String?   @db.VarChar(100)
  icon_color String?   @db.VarChar(100)
  created_at DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted Boolean?  @default(false)
  house_name String    @db.VarChar(100)
  groups     groups?   @relation(fields: [group_id], references: [group_id], onDelete: NoAction, onUpdate: NoAction, map: "houses_ibfk_1")
  spaces     spaces[]

  @@index([group_id], map: "group_id")
}

model image_product {
  id         Int       @id @default(autoincrement())
  product_id String?
  image      String?   @db.MediumText
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  product    product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "image_product_ibfk_1")

  @@index([product_id], map: "product_id")
}

model import_warehouse {
  id                String          @id
  import_number     Int?
  employee_id       String?         @db.VarChar(32)
  warehouse_id      Int?
  import_date       DateTime?       @db.Date
  file_authenticate String?         @db.MediumText
  total_money       Float?
  note              String?         @db.VarChar(500)
  status            Int?
  created_at        DateTime?       @default(now()) @db.Timestamp(0)
  updated_at        DateTime?       @updatedAt @db.Timestamp(0)
  deleted_at        DateTime?       @db.Timestamp(0)
  detail_import     detail_import[]
  employee          employee?       @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "import_warehouse_ibfk_1")
  warehouse         warehouse?      @relation(fields: [warehouse_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "import_warehouse_ibfk_2")

  @@index([employee_id], map: "employee_id")
  @@index([warehouse_id], map: "warehouse_id")
}

model liked {
  id          Int       @id @default(autoincrement())
  customer_id String    @db.VarChar(32)
  product_id  String?
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @updatedAt @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  customer    customer  @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "liked_ibfk_1")
  product     product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "liked_ibfk_2")

  @@index([customer_id], map: "customer_id")
  @@index([product_id], map: "product_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notification {
  id         Int       @id @default(autoincrement())
  account_id String?   @db.VarChar(32)
  role_id    Int?
  text       String?   @db.VarChar(255)
  type       String?   @db.VarChar(200)
  is_read    Boolean?
  created_at DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
  account    account?  @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "notification_ibfk_1")
  role       role?     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notification_ibfk_2")

  @@index([account_id], map: "account_id")
  @@index([role_id], map: "role_id")
}

model order {
  id                                  String          @id @db.VarChar(32)
  order_number                        Int?
  customer_id                         String?         @db.VarChar(32)
  saler_id                            String?         @db.VarChar(32)
  shipper_id                          String?         @db.VarChar(32)
  export_date                         DateTime?       @db.Date
  total_import_money                  Float?
  discount                            Float?
  vat                                 Float?          @db.Float
  total_money                         Float?
  shipping_fee                        Int?
  amount                              Float?
  profit                              Float?
  address                             String?         @db.VarChar(500)
  payment_method                      String?         @db.VarChar(50)
  payment_account                     String?         @db.VarChar(30)
  phone                               String?         @db.VarChar(12)
  name_recipient                      String?         @db.VarChar(150)
  note                                String?         @db.VarChar(500)
  platform_order                      String?         @db.VarChar(50)
  status                              Int?            @default(0) @db.TinyInt
  image_shipped                       String?         @db.MediumText
  created_at                          DateTime?       @default(now()) @db.Timestamp(0)
  updated_at                          DateTime?       @updatedAt @db.Timestamp(0)
  deleted_at                          DateTime?       @db.Timestamp(0)
  detail_export                       detail_export[]
  customer                            customer?       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_1")
  employee_order_saler_idToemployee   employee?       @relation("order_saler_idToemployee", fields: [saler_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_2")
  employee_order_shipper_idToemployee employee?       @relation("order_shipper_idToemployee", fields: [shipper_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_3")
  order_detail                        order_detail[]

  @@index([customer_id], map: "customer_id")
  @@index([saler_id], map: "saler_id")
  @@index([shipper_id], map: "shipper_id")
}

model order_detail {
  id             Int       @id @default(autoincrement())
  order_id       String?   @db.VarChar(32)
  product_id     String?
  unit           String?   @db.VarChar(30)
  warrenty_time  Int?
  sale_price     Float?
  discount       Float?
  quantity_sold  Float?
  amount         Float?
  delivery_date  DateTime? @db.DateTime(0)
  receiving_date DateTime? @db.DateTime(0)
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  updated_at     DateTime? @updatedAt @db.Timestamp(0)
  deleted_at     DateTime? @db.Timestamp(0)
  product        product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_detail_ibfk_1")
  order          order?    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_detail_ibfk_2")

  @@index([order_id], map: "order_detail_ibfk_2")
  @@index([product_id], map: "product_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ownership_history {
  history_id                                      Int       @default(autoincrement())
  device_serial                                   String?   @db.VarChar(50)
  from_user_id                                    String?   @db.VarChar(32)
  to_user_id                                      String?   @db.VarChar(32)
  transferred_at                                  DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  legal_expired_date                              DateTime? @db.DateTime(0)
  is_expired                                      Boolean?  @default(false)
  created_at                                      DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at                                      DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted                                      Boolean?  @default(false)
  ticket_id                                       String
  tickets                                         tickets   @relation(fields: [ticket_id], references: [ticket_id], onDelete: NoAction, onUpdate: NoAction, map: "ownership_history_ibfk_1")
  devices                                         devices?  @relation(fields: [device_serial], references: [serial_number], onDelete: NoAction, onUpdate: NoAction, map: "ownership_history_ibfk_2")
  account_ownership_history_from_user_idToaccount account?  @relation("ownership_history_from_user_idToaccount", fields: [from_user_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "ownership_history_ibfk_3")
  account_ownership_history_to_user_idToaccount   account?  @relation("ownership_history_to_user_idToaccount", fields: [to_user_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "ownership_history_ibfk_4")

  @@id([history_id, ticket_id])
  @@index([ticket_id], map: "ticket_id")
  @@index([device_serial], map: "device_serial")
  @@index([from_user_id], map: "from_user_id")
  @@index([to_user_id], map: "to_user_id")
}

model payment_info {
  id             Int       @id @default(autoincrement())
  customer_id    String?   @db.VarChar(32)
  account_number String?   @db.VarChar(30)
  bank           String?   @db.VarChar(50)
  name_account   String?   @db.VarChar(150)
  is_default     Boolean?
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  updated_at     DateTime? @updatedAt @db.Timestamp(0)
  deleted_at     DateTime? @db.Timestamp(0)
  customer       customer? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "payment_info_ibfk_1")

  @@index([customer_id], map: "customer_id")
}

model permission {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(500)
  code            String?           @db.VarChar(500)
  type            String?           @db.VarChar(500)
  show_in_menu    String?           @db.VarChar(500)
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  updated_at      DateTime?         @updatedAt @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  permission_role permission_role[]
}

model permission_role {
  id            Int        @id @default(autoincrement())
  role_id       Int
  permission_id Int
  created_at    DateTime?  @default(now()) @db.Timestamp(0)
  updated_at    DateTime?  @updatedAt @db.Timestamp(0)
  deleted_at    DateTime?  @db.Timestamp(0)
  permission    permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "permission_role_ibfk_1")
  role          role       @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "permission_role_ibfk_2")

  @@index([permission_id], map: "permission_id")
  @@index([role_id], map: "role_id")
}

model product {
  id                  String                @id
  name                String?               @db.VarChar(500)
  slug                String?               @db.VarChar(500)
  description         String?               @db.Text
  description_normal  String?               @db.Text
  image               String?               @db.MediumText
  selling_price       Float?
  category_id         Int?
  unit_id             Int?
  warrenty_time_id    Int?
  views               Int?
  is_hide             Boolean?
  status              Int?                  @db.TinyInt
  created_at          DateTime?             @default(now()) @db.Timestamp(0)
  updated_at          DateTime?             @updatedAt @db.Timestamp(0)
  deleted_at          DateTime?             @db.Timestamp(0)
  attribute_product   attribute_product[]
  blog                blog[]
  cart                cart[]
  detail_export       detail_export[]
  detail_import       detail_import[]
  image_product       image_product[]
  liked               liked[]
  order_detail        order_detail[]
  categories          categories?           @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_1")
  unit                unit?                 @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_2")
  warrenty_time       warrenty_time?        @relation(fields: [warrenty_time_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_3")
  review_product      review_product[]
  warehouse_inventory warehouse_inventory[]

  @@index([category_id], map: "category_id")
  @@index([unit_id], map: "unit_id")
  @@index([warrenty_time_id], map: "warrenty_time_id")
}

model planning {
  planning_id        String               @id @db.VarChar(32)
  status             String               @default("pending") @db.VarChar(20)
  logs               Json?
  created_by         String               @db.VarChar(32)
  created_at         DateTime             @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at         DateTime             @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted         Boolean              @default(false)
  planning_note      String?              @db.VarChar(500)
  account            account              @relation("account_planning_created_byToaccount", fields: [created_by], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "planning_ibfk_2")
  production_batches production_batches[]

  @@index([created_by], map: "created_by")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model production_batches {
  batch_id            Int                   @default(autoincrement())
  production_batch_id String                @unique @db.VarChar(32)
  template_id         String                @db.VarChar(32)
  quantity            Int
  status              String                @default("pending") @db.VarChar(20)
  created_at          DateTime              @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at          DateTime              @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted          Boolean               @default(false)
  batch_note          String?               @db.VarChar(500)
  logs                Json?
  planning_id         String                @db.VarChar(32)
  firmware_id         String?               @db.VarChar(32)
  device_templates    device_templates      @relation(fields: [template_id], references: [template_id], onDelete: NoAction, onUpdate: NoAction, map: "production_batches_ibfk_1")
  planning            planning              @relation(fields: [planning_id], references: [planning_id], onDelete: NoAction, onUpdate: NoAction, map: "production_batches_ibfk_2")
  firmware            firmware?             @relation(fields: [firmware_id], references: [firmware_id], onDelete: NoAction, onUpdate: NoAction, map: "production_batches_ibfk_3")
  production_tracking production_tracking[]

  @@id([batch_id, planning_id, production_batch_id])
  @@index([template_id], map: "template_id")
  @@index([planning_id], map: "planning_id")
  @@index([firmware_id], map: "firmware_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model production_tracking {
  production_id       Int                @id @default(autoincrement())
  device_serial       String?            @db.VarChar(50)
  stage               String             @db.VarChar(50)
  status              String             @default("pending") @db.VarChar(20)
  created_at          DateTime           @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at          DateTime           @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted          Boolean            @default(false)
  production_batch_id String             @db.VarChar(32)
  state_logs          Json?
  devices             devices[]
  production_batches  production_batches @relation(fields: [production_batch_id], references: [production_batch_id], onDelete: NoAction, onUpdate: NoAction, map: "production_tracking_ibfk_1")

  @@index([production_batch_id], map: "production_batch_id")
}

model review_product {
  id          Int       @id @default(autoincrement())
  customer_id String?   @db.VarChar(32)
  product_id  String?
  comment     String?   @db.Text
  image       String?   @db.MediumText
  rating      Int?      @db.TinyInt
  response    String?   @db.VarChar(500)
  note        String?   @db.VarChar(500)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @updatedAt @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  customer    customer? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_product_ibfk_1")
  product     product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "review_product_ibfk_2")

  @@index([customer_id], map: "customer_id")
  @@index([product_id], map: "product_id")
}

model role {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(500)
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  updated_at      DateTime?         @updatedAt @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  account         account[]
  notification    notification[]
  permission_role permission_role[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shared_permissions {
  permission_id       Int       @id @default(autoincrement())
  device_serial       String?   @db.VarChar(50)
  shared_with_user_id String?   @db.VarChar(32)
  permission_type     String?   @default("readonly") @db.VarChar(20)
  created_at          DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at          DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted          Boolean?  @default(false)
  devices             devices?  @relation(fields: [device_serial], references: [serial_number], onDelete: NoAction, onUpdate: NoAction, map: "shared_permissions_ibfk_1")
  account             account?  @relation(fields: [shared_with_user_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "shared_permissions_ibfk_2")

  @@index([device_serial], map: "device_serial")
  @@index([shared_with_user_id], map: "shared_with_user_id")
}

model slideshow {
  id          Int       @id @default(autoincrement())
  text_button String?   @db.VarChar(500)
  link        String?   @db.VarChar(500)
  image       String?   @db.MediumText
  status      Int?      @db.TinyInt
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model spaces {
  space_id          Int             @id @default(autoincrement())
  house_id          Int?
  created_at        DateTime?       @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at        DateTime?       @db.DateTime(0)
  is_deleted        Boolean?        @default(false)
  space_name        String          @db.VarChar(100)
  icon_color        String?         @db.VarChar(100)
  icon_name         String?         @db.VarChar(100)
  space_description String?         @db.LongText
  alerts            alerts[]
  devices           devices[]
  hourly_values     hourly_values[]
  houses            houses?         @relation(fields: [house_id], references: [house_id], onDelete: NoAction, onUpdate: NoAction, map: "spaces_ibfk_1")

  @@index([house_id], map: "house_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sync_tracking {
  sync_id        Int           @id @default(autoincrement())
  account_id     String?       @db.VarChar(32)
  user_device_id String?       @db.VarChar(32)
  ip_address     String?       @db.VarChar(45)
  last_synced_at DateTime?     @db.DateTime(0)
  sync_type      String?       @db.VarChar(20)
  sync_status    String?       @db.VarChar(20)
  created_at     DateTime?     @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at     DateTime?     @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted     Boolean?      @default(false)
  account        account?      @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "sync_tracking_ibfk_1")
  user_devices   user_devices? @relation(fields: [user_device_id], references: [user_device_id], onDelete: NoAction, onUpdate: NoAction, map: "sync_tracking_ibfk_2")

  @@index([account_id], map: "account_id")
  @@index([user_device_id], map: "user_device_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model template_components {
  template_component_id Int               @id @default(autoincrement())
  template_id           String?           @db.VarChar(32)
  component_id          String?           @db.VarChar(32)
  quantity_required     Int?              @default(1)
  created_at            DateTime?         @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at            DateTime?         @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted            Boolean?          @default(false)
  device_templates      device_templates? @relation(fields: [template_id], references: [template_id], onDelete: NoAction, onUpdate: NoAction, map: "template_components_ibfk_1")
  components            components?       @relation(fields: [component_id], references: [component_id], onDelete: NoAction, onUpdate: NoAction, map: "template_components_ibfk_2")

  @@index([component_id], map: "component_id")
  @@index([template_id], map: "template_id")
}


/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ticket_types {
  ticket_type_id Int       @id @default(autoincrement())
  type_name      String    @db.VarChar(50)
  priority       Int?      @default(1)
  is_active      Boolean?  @default(true)
  created_at     DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at     DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted     Boolean?  @default(false)
  tickets        tickets[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tickets {
  ticket_id                            String              @id @db.VarChar(32)
  user_id                              String?             @db.VarChar(32)
  device_serial                        String?             @db.VarChar(50)
  ticket_type_id                       Int
  description                          String?             @db.Text
  evidence                             Json?
  status                               String?             @default("pending") @db.VarChar(20)
  created_at                           DateTime?           @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at                           DateTime?           @db.DateTime(0)
  assigned_to                          String?             @db.VarChar(32)
  resolved_at                          DateTime?           @db.DateTime(0)
  resolve_solution                     String?             @db.Text
  is_deleted                           Boolean?            @default(false)
  ownership_history                    ownership_history[]
  account_tickets_user_idToaccount     account?            @relation("tickets_user_idToaccount", fields: [user_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "tickets_ibfk_1")
  devices                              devices?            @relation(fields: [device_serial], references: [serial_number], onDelete: NoAction, onUpdate: NoAction, map: "tickets_ibfk_2")
  ticket_types                         ticket_types        @relation(fields: [ticket_type_id], references: [ticket_type_id], onDelete: NoAction, onUpdate: NoAction, map: "tickets_ibfk_3")
  account_tickets_assigned_toToaccount account?            @relation("tickets_assigned_toToaccount", fields: [assigned_to], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "tickets_ibfk_4")

  @@index([user_id], map: "user_id")
  @@index([device_serial], map: "device_serial")
  @@index([ticket_type_id], map: "ticket_type_id")
  @@index([assigned_to], map: "assigned_to")
}

model unit {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  product    product[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_devices {
  user_device_id String          @id @db.VarChar(32)
  user_id        String?         @db.VarChar(32)
  device_name    String          @db.VarChar(100)
  device_id      String          @db.VarChar(255)
  device_uuid    String?         @unique(map: "device_uuid") @db.VarChar(36)
  device_token   String?         @db.Text
  last_login     DateTime?       @default(dbgenerated("(now())")) @db.DateTime(0)
  last_out       DateTime?       @db.DateTime(0)
  created_at     DateTime?       @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at     DateTime?       @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted     Boolean?        @default(false)
  sync_tracking  sync_tracking[]
  account        account?        @relation(fields: [user_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "user_devices_ibfk_1")

  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_groups {
  user_group_id Int       @id @default(autoincrement())
  account_id    String?   @db.VarChar(32)
  group_id      Int?
  role          String?   @default("member") @db.VarChar(20)
  joined_at     DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  updated_at    DateTime? @default(dbgenerated("(now())")) @db.DateTime(0)
  is_deleted    Boolean?  @default(false)
  account       account?  @relation(fields: [account_id], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "user_groups_ibfk_1")
  groups        groups?   @relation(fields: [group_id], references: [group_id], onDelete: NoAction, onUpdate: NoAction, map: "user_groups_ibfk_2")

  @@index([account_id], map: "account_id")
  @@index([group_id], map: "group_id")
}

model warehouse {
  id               Int                @id @default(autoincrement())
  name             String?            @db.VarChar(500)
  address          String?            @db.VarChar(500)
  created_at       DateTime?          @default(now()) @db.Timestamp(0)
  updated_at       DateTime?          @updatedAt @db.Timestamp(0)
  deleted_at       DateTime?          @db.Timestamp(0)
  province         Int?
  district         Int?
  ward             Int?
  employee         employee[]
  import_warehouse import_warehouse[]
}

model warehouse_inventory {
  id         Int       @id @default(autoincrement())
  product_id String?
  batch_code String?   @db.VarChar(50)
  stock      Int?
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  product    product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "warehouse_inventory_ibfk_1")

  @@index([product_id], map: "product_id")
}

model warrenty_time {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(150)
  time       Int?
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  product    product[]
}
